[
	{
        "name": "rule_documentation_presence_for_1120s_business",
        "question": "Is documentation present for borrowers 1120S business",
        "steps": [
            {
                "name": "step_check_documentation_presence",
                "fields": "1120S Business Income",
                "split_cell": true,
                "expert_instructions": "For all the dates, format is (date format MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY)\n\n1. From Application date extract application year and save it as YYYY integer value. then;\nCheck If \u25d8 01/01/YYYY\u2264 Application Date < 04/14/YYYY ; and \u25d8 \"1b Start Date(From URLA)\" \u2264 Application Date \u22125 years ; if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 Tax Form 1040 for (YYYY-1) and Tax Form 1040 for (YYYY-2) and\nTax Form 1120S for (YYYY-1) and Tax Form 1120S for (YYYY-2) and\nTax Form 1120SSCHK1 for (YYYY-1) and Tax Form 1120SSCHK1 for (YYYY-2); or\n\u2666 Tax Form 1040 for (YYYY-2) and Tax Form 1040 for (YYYY-3) and\nTax Form 1120S for (YYYY-2) and Tax Form 1120S for (YYYY-3) and\nTax Form 1120SSCHK1 for (YYYY-2) and Tax Form 1120SSCHK1 for (YYYY-3); or\n\u2666 Tax Form 1040 for (YYYY-1) and\nTax Form 1120S for (YYYY-1) and\nTax Form 1120SSCHK1 for (YYYY-1); or\n\u2666 Tax Form 1040 for (YYYY-2) and\nTax Form 1120S for (YYYY-2) and\nTax Form 1120SSCHK1 for (YYYY-2).\nIf above set of docs present terminate the process else return the appropriate discrepancy message.\n\n2.From Application date extract application year and save it as YYYY integer value. then;\nCheck If \u25d8 04/15/YYYY\u2264 Application Date < 10/14/YYYY ; and \u25d8 \"1b Start Date(From URLA)\" \u2264 Application Date \u22125 years ; if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 Tax Form 1040 for (YYYY-1) and Tax Form 1040 for (YYYY-2) and\nTax Form 1120S for (YYYY-1) and Tax Form 1120S for (YYYY-2) and\nTax Form 1120SSCHK1 for (YYYY-1) and Tax Form 1120SSCHK1 for (YYYY-2); or\n\u2666 Tax Form 1040 for (YYYY-2) and Tax Form 1040 for (YYYY-3) and\nForm 4868 for (YYYY-1) and\nTax Form 1120S for (YYYY-2) and Tax Form 1120S for (YYYY-3) and\nTax Form 1120SSCHK1 for (YYYY-2) and Tax Form 1120SSCHK1 for (YYYY-3) and\nForm 7004 for (YYYY-1); or\n\u2666 Tax Form 1040 for (YYYY-1) and\nTax Form 1120S for (YYYY-1) and\nTax Form 1120SSCHK1 for (YYYY-1); or\n\u2666 Tax Form 1040 for (YYYY-2) and\nForm 4868 for (YYYY-1) and\nTax Form 1120S for (YYYY-2) and\nTax Form 1120SSCHK1 for (YYYY-2) and\nForm 7004 for (YYYY-1).\nIf above set of docs present terminate the process else return the appropriate discrepancy message.\n\n3. From Application date extract application year and save it as YYYY integer value. then;\nCheck If \u25d8 10/15/YYYY\u2264 Application Date \u2264 12/31/YYYY ; and \u25d8 \"1b Start Date(From URLA)\" \u2264 Application Date \u22125 years ; if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 Tax Form 1040 for (YYYY-1) and Tax Form 1040 for (YYYY-2) and\nTax Form 1120S for (YYYY-1) and Tax Form 1120S for (YYYY-2) and\nTax Form 1120SSCHK1 for (YYYY-1) and Tax Form 1120SSCHK1 for (YYYY-2); or\n\u2666 Tax Form 1040 for (YYYY-1) and\nTax Form 1120S for (YYYY-1) and\nTax Form 1120SSCHK1 for (YYYY-1).\nIf above set of docs present terminate the process else return the appropriate discrepancy message.\n\n4. From Application date extract application year and save it as YYYY integer value. then;\nCheck If \u25d8 01/01/YYYY\u2264 Application Date < 04/14/YYYY ; and \u25d8 (Application Date \u22125 years) < Employment Start Date \u2264 (Application Date \u22122 years); if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 Tax Form 1040 for (YYYY-1) and Tax Form 1040 for (YYYY-2) and\nTax Form 1120S for (YYYY-1) and Tax Form 1120S for (YYYY-2) and\nTax Form 1120SSCHK1 for (YYYY-1) and Tax Form 1120SSCHK1 for (YYYY-2).\n\u2666 Tax Form 1040 for (YYYY-2) and Tax Form 1040 for (YYYY-3) and\nTax Form 1120S for (YYYY-2) and Tax Form 1120S for (YYYY-3) and\nTax Form 1120SSCHK1 for (YYYY-2) and Tax Form 1120SSCHK1 for (YYYY-3).\nIf above set of docs present terminate the process else return the appropriate discrepancy message.\n\n5. From Application date extract application year and save it as YYYY integer value. then;\nCheck If \u25d8 04/15/YYYY\u2264 Application Date < 10/14/YYYY ; and \u25d8 (Application Date \u22125 years) < Employment Start Date \u2264 (Application Date \u22122 years); if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 Tax Form 1040 for (YYYY-1) and Tax Form 1040 for (YYYY-2) and\nTax Form 1120S for (YYYY-1) and Tax Form 1120S for (YYYY-2) and\nTax Form 1120SSCHK1 for (YYYY-1) and Tax Form 1120SSCHK1 for (YYYY-2); or\n\u2666 Tax Form 1040 for (YYYY-2) and Tax Form 1040 for (YYYY-3) and\nForm 4868 for (YYYY-1) and\nTax Form 1120S for (YYYY-2) and Tax Form 1120S for (YYYY-3) and\nTax Form 1120SSCHK1 for (YYYY-2) and Tax Form 1120SSCHK1 for (YYYY-3) and\nForm 7004 for (YYYY-1).\nIf above set of docs present terminate the process else return the appropriate discrepancy message.\n\n6. From Application date extract application year and save it as YYYY integer value. then;\nCheck If \u25d8 10/15/YYYY\u2264 Application Date \u2264 12/31/YYYY ; and \u25d8 (Application Date \u22125 years) < Employment Start Date \u2264 (Application Date \u22122 years); if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 Tax Form 1040 for (YYYY-1) and Tax Form 1040 for (YYYY-2) and\nTax Form 1120S for (YYYY-1) and Tax Form 1120S for (YYYY-2) and\nTax Form 1120SSCHK1 for (YYYY-1) and Tax Form 1120SSCHK1 for (YYYY-2).\nIf above set of docs present terminate the process else return the appropriate discrepancy message.\n\n7. From Application date extract application year and save it as YYYY integer value. then;\nCheck If \u25d8 01/01/YYYY\u2264 Application Date < 04/14/YYYY ; and \u25d8 Employment Start Date \u2265 (Application Date \u22122 years) ; and \u25d8 Employment Start Date YYYY is YYYY-2 ;if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 Tax Form 1040 for the year (YYYY-1) and Tax Form 1040 for the year (YYYY-2); and\nTax Form 1120S for the year (YYYY-1) and Tax Form 1120S  for the year (YYYY-2); and\nTax Form 1120SSCHK1 for the year (YYYY-1) and Tax Form Tax Form 1120SSCHK1 for the year (YYYY-2) ; or \nIf above set of docs present terminate the process else return the appropriate discrepancy message.\n\n\n8. From Application date extract application year and save it as YYYY integer value. then;\nCheck If \u25d8 01/01/YYYY\u2264 Application Date < 12/31/YYYY ; and \u25d8 Employment Start Date \u2265 (Application Date \u22122 years) ; and \u25d8 Employment Start Date YYYY is YYYY-2 ;if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 Tax Form 1040 for the year (YYYY-1) and Tax Form 1040 for the year (YYYY-2); and\nTax Form 1120S for the year (YYYY-1) and Tax Form 1120S  for the year (YYYY-2); and\nTax Form 1120SSCHK1 for the year (YYYY-1) and Tax Form 1120SSCHK1 for the year (YYYY-2)\nIf above set of docs present terminate the process else return the appropriate discrepancy message.\n\n\n9. From Application date extract application year and save it as YYYY integer value. then;\nCheck If \u25d8 01/01/YYYY\u2264 Application Date \u2264 12/31/YYYY ; and \u25d8 Employment Start Date \u2265 (Application Date \u22122 years) ; and \u25d8 Employment Start Date YYYY is YYYY-1 ; if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 Tax Form 1040 for the year (YYYY-1) and\nTax Form 1120S for the year (YYYY-1) ;and\nTax Form 1120SSCHK1 for the year (YYYY-1)\nIf above set of docs present terminate the process else return the appropriate discrepancy message.",
                "discrepancy_messages": "1. Borrower's personal Tax Returns (1040's) and / or Business Tax Returns (1120S) are missing for the most recent year. As the business is in existence for five years as reflected on the Form 1003.\n\n2. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent year. Form 4868 and/or Form 7004 is missing, which is required if tax returns are unavailable. As the business has been in existence for more than five years as reflected on Form 1003.\n\n3. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent year. Form 4868 is not acceptable as the application date is after October 15. As the business has been in existence for more than five years as reflected on Form 1003.\n\n4. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.\n\n5. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. Form 4868 and/or Form 7004 is missing, which is required if tax returns for the most recent year are unavailable. As the business has been in existence for less than five years as reflected on Form 1003.\n\n6. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. Form 4868 is not acceptable as the application date is after October 15th. As the business has been in existence for less than five years,as reflected on Form 1003. \n\n7. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.\n\n8. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.\n\n9. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent year. As the business started less than 2 years ago as reflected on Form 1003.",
                "doc_type_keys": [
                    "borrowers[].Tax Form 1040",
                    "borrowers[].Tax Form 1120S",
                    "borrowers[].Tax Form 1120SSCHK1",
                    "borrowers[].Tax Form 4868",
                    "other_doc_types.Tax Form 7004"
                ],
                "htps": [
                    {
                        "name": "htp_validation_set_1",
                        "expert_instructions": "1a. Extract the Application Year (YYYY) from the Application Date.\n1b. Validate that Application Date is between 01/01/YYYY (inclusive) and 04/14/YYYY (exclusive).\n1c. Validate that \"1b Start Date (From URLA)\" \u2264 (Application Date \u2212 5 years).\n1d. If either condition in 1b or 1c is not satisfied, Skip to HTP_Validation_Set_2.\n1e. Check for the existence of one of the following alternative document sets:\n    Alternative 1:\n       \u2022 Tax Form 1040 for (YYYY-1)\n       \u2022 Tax Form 1040 for (YYYY-2)\n       \u2022 Tax Form 1120S for (YYYY-1)\n       \u2022 Tax Form 1120S for (YYYY-2)\n       \u2022 Tax Form 1120SSCHK1 for (YYYY-1)\n       \u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n    Alternative 2:\n       \u2022 Tax Form 1040 for (YYYY-2)\n       \u2022 Tax Form 1040 for (YYYY-3)\n       \u2022 Tax Form 1120S for (YYYY-2)\n       \u2022 Tax Form 1120S for (YYYY-3)\n       \u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n       \u2022 Tax Form 1120SSCHK1 for (YYYY-3)\n    Alternative 3:\n       \u2022 Tax Form 1040 for (YYYY-1)\n       \u2022 Tax Form 1120S for (YYYY-1)\n       \u2022 Tax Form 1120SSCHK1 for (YYYY-1)\n    Alternative 4:\n       \u2022 Tax Form 1040 for (YYYY-2)\n       \u2022 Tax Form 1120S for (YYYY-2)\n       \u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n1f. If any one alternative document set is present, Terminate process.\n1g. If none of the alternative document sets are present, \n    \"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040's) and/or Business Tax Returns (1120S) are missing for the most recent year. As the business is in existence for five years as reflected on the Form 1003.\"",
                        "discrepancy_messages": "",
                        "tasks": [
                            {
                                "task_name": "extract_application_year",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Extract the Application Year (YYYY) from the Application Date. Parse the 'application_date' field (which can be in formats MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY) to isolate the year component. The expected output is a 4-digit year string (YYYY). This extraction does not require any conditional checks or validations.",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value"
                                        ],
                                        "formulas": [
                                            "Extract the year by parsing the date string (e.g., split by '/', '-', or '.') and select the third element if the format is MM/DD/YYYY."
                                        ],
                                        "outputs": [
                                            "'application_year': The 4-digit year extracted from the Application Date (YYYY)"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "extract_application_year",
                                            "function_description": "Extracts the year from the application date string, which can be in formats MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "Date in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                }
                                            ],
                                            "return_type": "String",
                                            "return_description": [
                                                {
                                                    "field_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the Application Date (YYYY)"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "validate_application_date_and_start_date",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Validate that the Application Date is within the acceptable range. The acceptable date range is from 01/01/YYYY (inclusive) to 04/14/YYYY (exclusive), where YYYY is the Application Year extracted earlier. Convert the Application Date to a date object and construct the lower bound (01/01/YYYY) and the upper bound (04/14/YYYY). Verify that the Application Date is not earlier than the lower bound and is before the upper bound.",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value",
                                            "'application_year': output of extract_application_year -> application_year"
                                        ],
                                        "formulas": [
                                            "Lower bound date = '01/01/' + application_year",
                                            "Upper bound date = '04/14/' + application_year",
                                            "Convert all dates to date objects and check: lower_bound <= application_date < upper_bound"
                                        ],
                                        "outputs": [
                                            "'is_application_date_valid': A Boolean indicating whether the Application Date is within the valid range."
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_application_date",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The Application Date to be validated. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the Application Date (YYYY).",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_1']['extract_application_year']['1.a']['application_year']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the Application Date is within the valid range."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.b",
                                        "description": "Validate that the '1b Start Date (From URLA)' is less than or equal to (Application Date minus 5 years). Extract the 'start_date' from the first employer of the first borrower by navigating to: borrowers (list) -> first borrower -> URLA -> current_employer (list) -> first employer -> start_date. Subtract 5 years from the Application Date and compare the dates. The condition is met if the extracted start_date is less than or equal to (Application Date - 5 years).",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value",
                                            "'URLA_start_date': input_data -> borrowers -> first borrower -> URLA -> current_employer -> first employer -> start_date",
                                            "'application_year': output of extract_application_year -> application_year"
                                        ],
                                        "formulas": [
                                            "Calculate adjusted_date = Application Date - 5 years (handle date conversion appropriately)",
                                            "Compare: URLA_start_date <= adjusted_date"
                                        ],
                                        "outputs": [
                                            "'is_start_date_valid': A Boolean indicating whether the URLA start date satisfies the condition."
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_start_date",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The Application Date to be used for validation. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "URLA_start_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The start date from the first employer of the first borrower. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['borrowers'][0]['URLA']['current_employer'][0]['start_date']['value']"
                                                },
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the Application Date (YYYY).",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_1']['extract_application_year']['1.a']['application_year']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_start_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the URLA start date satisfies the condition."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.c",
                                        "description": "Determine whether to continue with the current HTP or skip to HTP_Validation_Set_2. Check the results from the Application Date validation (is_application_date_valid) and the URLA start date validation (is_start_date_valid). If either validation fails (i.e. if either Boolean is false), then set the skip condition to jump to HTP_Validation_Set_2.",
                                        "inputs": [
                                            "'is_application_date_valid': output from subtask 1.a of this task",
                                            "'is_start_date_valid': output from subtask 1.b of this task"
                                        ],
                                        "formulas": [
                                            "If (is_application_date_valid == false OR is_start_date_valid == false) then condition is met for skipping to HTP_Validation_Set_2"
                                        ],
                                        "outputs": [
                                            "'skip_decision': A flag which when true indicates skipping to HTP_Validation_Set_2 (i.e., skip_to_htp = 'HTP_Validation_Set_2')"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": "HTP_Validation_Set_2",
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "determine_skip_decision",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 1.a indicating if the Application Date is valid.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_1']['validate_application_date_and_start_date']['1.a']['is_application_date_valid']"
                                                },
                                                {
                                                    "argument_name": "is_start_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 1.b indicating if the URLA start date is valid.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_1']['validate_application_date_and_start_date']['1.b']['is_start_date_valid']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "skip_decision",
                                                    "data_type": "Boolean",
                                                    "description": "A flag which when true indicates skipping to HTP_Validation_Set_2."
                                                },
                                                {
                                                    "field_name": "skip_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to skip to HTP_Validation_Set_2."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "check_alternative_document_sets",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Check for the existence of one of the alternative document sets. Using the extracted application_year, evaluate the following four alternative sets by verifying that all required documents exist for the specified tax years. For each alternative, use the following checks:\n\nAlternative 1:\n- Tax Form 1040 for (application_year - 1)\n- Tax Form 1040 for (application_year - 2)\n- Tax Form 1120S for (application_year - 1)\n- Tax Form 1120S for (application_year - 2)\n- Tax Form 1120SSCHK1 for (application_year - 1)\n- Tax Form 1120SSCHK1 for (application_year - 2)\n\nAlternative 2:\n- Tax Form 1040 for (application_year - 2)\n- Tax Form 1040 for (application_year - 3)\n- Tax Form 1120S for (application_year - 2)\n- Tax Form 1120S for (application_year - 3)\n- Tax Form 1120SSCHK1 for (application_year - 2)\n- Tax Form 1120SSCHK1 for (application_year - 3)\n\nAlternative 3:\n- Tax Form 1040 for (application_year - 1)\n- Tax Form 1120S for (application_year - 1)\n- Tax Form 1120SSCHK1 for (application_year - 1)\n\nAlternative 4:\n- Tax Form 1040 for (application_year - 2)\n- Tax Form 1120S for (application_year - 2)\n- Tax Form 1120SSCHK1 for (application_year - 2)\n\nThe task is to check each alternative set and determine if at least one complete set is present among the submitted documents. Note: The required document types are assumed to be available in the input data with the following keys:\n- 'Tax Form 1040': input_data -> Tax Form 1040 (list of documents)\n- 'Tax Form 1120S': input_data -> Tax Form 1120S (list of documents)\n- 'Tax Form 1120SSCHK1': input_data -> Tax Form 1120SSCHK1 (list of documents)\nFor each document, the tax year can be extracted from the document\u2019s 'tax_year' -> value field using the appropriate traversal path.",
                                        "inputs": [
                                            "'application_year': output of extract_application_year -> application_year",
                                            "'tax_form_1040': input_data -> Tax Form 1040",
                                            "'tax_form_1120S': input_data -> Tax Form 1120S",
                                            "'tax_form_1120SSCHK1': input_data -> Tax Form 1120SSCHK1"
                                        ],
                                        "formulas": [
                                            "For each alternative set, compute the target tax years (e.g., application_year - 1, application_year - 2, etc.) and check if a document with the corresponding tax_year exists in each required document list.",
                                            "If at least one alternative set has all its required documents present, then alternative_document_set_found = True; otherwise, set it to False."
                                        ],
                                        "outputs": [
                                            "'alternative_document_set_found': A Boolean flag that is true if at least one complete alternative set is found, false otherwise."
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "check_alternative_document_sets",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the Application Date (YYYY).",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_1']['extract_application_year']['1.a']['application_year']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1040",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1040 documents.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1040.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['borrowers'][0]['Tax Form 1040']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120s",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120S documents.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120S.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120sschk1",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120SSCHK1 documents.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120SSCHK1.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "alternative_document_set_found",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean flag that is true if at least one complete alternative set is found, false otherwise."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.b",
                                        "description": "If any one alternative document set is present (i.e., alternative_document_set_found is true), terminate the process. This subtask signals that the required documentation is satisfied and processing can be ended normally.",
                                        "inputs": [
                                            "'alternative_document_set_found': output from previous subtask"
                                        ],
                                        "formulas": [
                                            "If alternative_document_set_found is true, then proceed to terminate the process."
                                        ],
                                        "outputs": [
                                            "'termination_status': A status message or flag indicating that the process is terminated because a valid alternative document set has been found."
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "terminate_process_if_alternative_set_found",
                                            "arguments": [
                                                {
                                                    "argument_name": "alternative_document_set_found",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 1.a indicating if an alternative document set is found.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_1']['check_alternative_document_sets']['1.a']['alternative_document_set_found']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "termination_status",
                                                    "data_type": "String",
                                                    "description": "A status message indicating that the process is terminated because a valid alternative document set has been found."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to terminate the process."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.c",
                                        "description": "If none of the alternative document sets are present (i.e., alternative_document_set_found is false), stop the process and return the discrepancy message. The discrepancy message to be returned is: \"Borrower's personal Tax Returns (1040's) and/or Business Tax Returns (1120S) are missing for the most recent year. As the business is in existence for five years as reflected on the Form 1003.\"",
                                        "inputs": [
                                            "'alternative_document_set_found': output from subtask 1.a of this task"
                                        ],
                                        "formulas": [
                                            "If alternative_document_set_found is false then log the discrepancy and stop the process."
                                        ],
                                        "outputs": [
                                            "'discrepancy_msg': The discrepancy message indicating the missing required tax documents."
                                        ],
                                        "discrepancy_string": "Borrower's personal Tax Returns (1040's) and/or Business Tax Returns (1120S) are missing for the most recent year. As the business is in existence for five years as reflected on the Form 1003.",
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "log_discrepancy_if_no_alternative_set",
                                            "arguments": [
                                                {
                                                    "argument_name": "alternative_document_set_found",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 1.a indicating if an alternative document set is found.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_1']['check_alternative_document_sets']['1.a']['alternative_document_set_found']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "discrepancy_message",
                                                    "data_type": "String",
                                                    "description": "The discrepancy message indicating the missing required tax documents."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to terminate the process."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "htp_validation_set_2",
                        "expert_instructions": "2a. Extract the Application Year (YYYY) from the Application Date.\n2b. Validate that Application Date is between 04/15/YYYY (inclusive) and 10/14/YYYY (exclusive).\n2c. Validate that \"1b Start Date (From URLA)\" \u2264 (Application Date \u2212 5 years).\n2d. If either condition in 2b or 2c is not satisfied, Skip to HTP_Validation_Set_3.\n2e. Check for the existence of one of the following alternative document sets:\nAlternative 1:\n\u2022 Tax Form 1040 for (YYYY-1)\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Tax Form 1120S for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-1)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\nAlternative 2:\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Tax Form 1040 for (YYYY-3)\n\u2022 Form 4868 for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120S for (YYYY-3)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-3)\n\u2022 Form 7004 for (YYYY-1)\nAlternative 3:\n\u2022 Tax Form 1040 for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-1)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-1)\nAlternative 4:\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Form 4868 for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n\u2022 Form 7004 for (YYYY-1)\n2f. If any one alternative document set is present, Terminate process.\n2g. If none of the alternative document sets are present,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent year. Form 4868 and/or Form 7004 is missing, which is required if tax returns are unavailable. As the business has been in existence for more than five years as reflected on Form 1003.\"",
                        "discrepancy_messages": "",
                        "tasks": [
                            {
                                "task_name": "application_date_extraction_and_validations",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Extract the Application Year (YYYY) from the Application Date. Parse the 'application_date' from the input (which can be in MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY format) and extract the year component.",
                                        "inputs": [
                                            "'application_date': input_data -> 'application_date' -> 'value'"
                                        ],
                                        "formulas": [
                                            "Split the application_date string by '/' or '-' or '.' and take the third element as the year."
                                        ],
                                        "outputs": [
                                            "'application_year': The extracted year in YYYY format as a string"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "extract_application_year",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                }
                                            ],
                                            "return_type": "String",
                                            "return_description": [
                                                {
                                                    "field_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the Application Date (YYYY)"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.b",
                                        "description": "Validate that the Application Date is within the range between 04/15/YYYY (inclusive) and 10/14/YYYY (exclusive). Construct the lower bound as '04/15/' concatenated with the extracted application_year and the upper bound as '10/14/' concatenated with the same year. Convert the dates into a comparable format and check if the application_date falls within this range.",
                                        "inputs": [
                                            "'application_date': input_data -> 'application_date' -> 'value'",
                                            "'application_year': output from subtask 1.a"
                                        ],
                                        "formulas": [
                                            "LowerBound = '04/15/' + application_year; UpperBound = '10/14/' + application_year; Convert all dates to a comparable date format and check if LowerBound <= application_date < UpperBound."
                                        ],
                                        "outputs": [
                                            "'is_application_date_valid': A Boolean indicating if the application_date is within the valid window"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_application_date_range",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the Application Date (YYYY) from subtask 1.a",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_2']['application_date_extraction_and_validations']['1.a']['application_year']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the Application Date is within the valid range."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.c",
                                        "description": "Validate that '1b Start Date (From URLA)' is less than or equal to (Application Date \u2212 5 years). Extract the '1b Start Date' by navigating to 'borrowers' (list) -> first borrower -> 'URLA' -> 'current_employer' (list) -> first employer -> 'start_date'. Then, subtract five years from the application_date (after converting it into a date object) and compare the two dates.",
                                        "inputs": [
                                            "'application_date': input_data -> 'application_date' -> 'value'",
                                            "'start_date_1b': input_data -> 'borrowers' -> first borrower -> 'URLA' -> 'current_employer' -> first employer -> 'start_date'"
                                        ],
                                        "formulas": [
                                            "ValidDate = application_date minus 5 years; Convert both start_date_1b and ValidDate to date objects and check if start_date_1b <= ValidDate."
                                        ],
                                        "outputs": [
                                            "'is_start_date_valid': A Boolean indicating whether the 1b start date meets the required condition"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_start_date",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "_1b_start_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The start date of the first employer from the first borrower in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['borrowers'][0]['URLA']['current_employer'][0]['start_date']['value']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_start_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the 1b start date meets the required condition."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "conditional_skip_on_date_validation_failure",
                                "subtasks": [
                                    {
                                        "subtask_id": "2.a",
                                        "description": "Check if either the application date validation (from subtask 1.b) or the 1b start date validation (from subtask 1.c) has failed. If either is false, then the conditions are not met and the process should skip to HTP_Validation_Set_3.",
                                        "inputs": [
                                            "'is_application_date_valid': output from task 'application_date_extraction_and_validations' subtask 1.b",
                                            "'is_start_date_valid': output from task 'application_date_extraction_and_validations' subtask 1.c"
                                        ],
                                        "formulas": [
                                            "if (is_application_date_valid == False) OR (is_start_date_valid == False) then the skip condition is met"
                                        ],
                                        "outputs": [
                                            "'skip_condition_met': A Boolean indicating whether the skip condition is triggered"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": "HTP_Validation_Set_3",
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "check_skip_condition_on_date_validation_failure",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the Application Date is within the valid range. Output from task 'application_date_extraction_and_validations' subtask 1.b",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_2']['application_date_extraction_and_validations']['1.b']['is_application_date_valid']"
                                                },
                                                {
                                                    "argument_name": "is_start_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the 1b start date meets the required condition. Output from task 'application_date_extraction_and_validations' subtask 1.c",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_2']['application_date_extraction_and_validations']['1.c']['is_start_date_valid']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "skip_condition_met",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean indicating whether the skip condition is triggered"
                                                },
                                                {
                                                    "field_name": "skip_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the HTP should be skipped to 'HTP_Validation_Set_3'"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "alternative_document_set_check",
                                "subtasks": [
                                    {
                                        "subtask_id": "3.a",
                                        "description": "Check for the existence of one of the following alternative document sets using the extracted application_year from subtask 1.a. For each alternative, compute the required tax years as offsets from application_year and verify the presence of the required documents by checking their 'tax_year' field. The alternative document sets are defined as follows:\n\nAlternative 1:\n\u2022 Tax Form 1040 for (YYYY-1)\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Tax Form 1120S for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-1)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n\nAlternative 2:\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Tax Form 1040 for (YYYY-3)\n\u2022 Form 4868 for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120S for (YYYY-3)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-3)\n\u2022 Form 7004 for (YYYY-1)\n\nAlternative 3:\n\u2022 Tax Form 1040 for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-1)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-1)\n\nAlternative 4:\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Form 4868 for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n\u2022 Form 7004 for (YYYY-1)\n\nFor each alternative, search in the corresponding document lists by matching the 'tax_year' or equivalent field.",
                                        "inputs": [
                                            "'application_year': output from subtask 1.a",
                                            "'Tax Form 1040 documents': input_data -> 'Tax Form 1040' (list items; navigate to each item's 'tax_year' -> 'value')",
                                            "'Tax Form 1120S documents': input_data -> 'other_doc_types' -> 'Tax Form 1120S' (list items; check 'tax_year' -> 'value')",
                                            "'Tax Form 1120SSCHK1 documents': input_data -> 'other_doc_types' -> 'Tax Form 1120SSCHK1' (list items; check 'tax_year' -> 'value')",
                                            "'Tax Form 4868 documents': input_data -> 'Tax Form 4868' (list items; check 'tax_year' -> 'value')",
                                            "'Form 7004 documents': input_data -> 'other_doc_types' -> 'Tax Form 7004' (list items; check 'tax_year' -> 'value')"
                                        ],
                                        "formulas": [
                                            "For each alternative, subtract the specified offset from application_year (e.g., application_year - 1, -2, or -3) and check whether all required documents for that alternative exist with a matching tax_year."
                                        ],
                                        "outputs": [
                                            "'doc_set_found': A Boolean indicating whether any one of the alternative document sets exists"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "check_alternative_document_sets",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the Application Date (YYYY) from subtask 1.a",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_2']['application_date_extraction_and_validations']['1.a']['application_year']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1040_documents",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1040 documents, each containing a 'tax_year' field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1040.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['borrowers'][0]['Tax Form 1040']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120s_documents",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120S documents, each containing a 'tax_year' field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120S.taxForm1120STaxYear String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120sschk1_documents",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120SSCHK1 documents, each containing a 'tax_year' field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120SSCHK1.taxForm1120SSCHK1TaxYear String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120SCHG']"
                                                },
                                                {
                                                    "argument_name": "tax_form_4868_documents",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 4868 documents, each containing a 'tax_year' field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 4868.taxForm4868TaxYear String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['borrowers'][0]['Tax Form 4868']"
                                                },
                                                {
                                                    "argument_name": "form_7004_documents",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Form 7004 documents, each containing a 'tax_year' field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Form 7004.taxForm7004TaxYear String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 7004']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "doc_set_found",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean indicating whether any one of the alternative document sets exists"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "3.b",
                                        "description": "If an alternative document set is found (i.e. if 'doc_set_found' is true from subtask 3.a), then terminate the process.",
                                        "inputs": [
                                            "'doc_set_found': output from subtask 3.a"
                                        ],
                                        "formulas": [
                                            "if doc_set_found == True then the alternative document set condition is met"
                                        ],
                                        "outputs": [
                                            "'alternative_set_valid': A Boolean indicating a valid alternative document set presence"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_alternative_document_set",
                                            "arguments": [
                                                {
                                                    "argument_name": "doc_set_found",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 3.a indicating if an alternative document set is found.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_2']['alternative_document_set_check']['3.a']['doc_set_found']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "alternative_set_valid",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean indicating a valid alternative document set presence"
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the process should be terminated"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "3.c",
                                        "description": "If none of the alternative document sets are present (i.e. if 'doc_set_found' is false from subtask 3.a), then stop the process and return the discrepancy message.",
                                        "inputs": [
                                            "'doc_set_found': output from subtask 3.a"
                                        ],
                                        "formulas": [
                                            "if doc_set_found == False then the missing document set condition is met"
                                        ],
                                        "outputs": [
                                            "'discrepancy_msg': The discrepancy message indicating missing required tax documents"
                                        ],
                                        "discrepancy_string": "Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent year. Form 4868 and/or Form 7004 is missing, which is required if tax returns are unavailable. As the business has been in existence for more than five years as reflected on Form 1003.",
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "handle_missing_document_set",
                                            "arguments": [
                                                {
                                                    "argument_name": "doc_set_found",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 3.a indicating if an alternative document set is found.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_2']['alternative_document_set_check']['3.a']['doc_set_found']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "discrepancy_message",
                                                    "data_type": "String",
                                                    "description": "The discrepancy message indicating missing required tax documents"
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the process should be terminated"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "htp_validation_set_3",
                        "expert_instructions": "3a. Extract the Application Year (YYYY) from the Application Date.\n3b. Validate that Application Date is between 10/15/YYYY (inclusive) and 12/31/YYYY (inclusive).\n3c. Validate that \"1b Start Date (From URLA)\" \u2264 (Application Date \u2212 5 years).\n3d. If either condition in 3b or 3c is not satisfied, Skip to HTP_Validation_Set_4.\n3e. Check for the existence of one of the following alternative document sets:\nAlternative 1:\n\u2022 Tax Form 1040 for (YYYY-1)\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Tax Form 1120S for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-1)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\nAlternative 2:\n\u2022 Tax Form 1040 for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-1)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-1)\n3f. If any one alternative document set is present, Terminate process.\n3g. If none of the alternative document sets are present,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent year. Form 4868 is not acceptable as the application date is after October 15. As the business has been in existence for more than five years as reflected on Form 1003.\"",
                        "discrepancy_messages": "",
                        "tasks": [
                            {
                                "task_name": "application_and_tax_validation",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Extract the Application Year (YYYY) from the Application Date. This subtask parses the 'application_date' field \u2013 given in one of the accepted formats (MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY) \u2013 and extracts the four\u2010digit year (YYYY).",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value"
                                        ],
                                        "formulas": [],
                                        "outputs": [
                                            "'application_year': The 4-digit year (YYYY) extracted from application_date"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "extract_application_year",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date from which the year is to be extracted. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                }
                                            ],
                                            "return_type": "String",
                                            "return_description": [
                                                {
                                                    "field_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year (YYYY) extracted from the application_date."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.b",
                                        "description": "Validate that the Application Date falls between October 15 and December 31 of the extracted application year (inclusive). Construct the boundary dates as '10/15/' + application_year and '12/31/' + application_year, then verify that the application_date is not earlier than the start boundary and not later than the end boundary.",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value",
                                            "'application_year': Use output from subtask 1.a (the extracted 4-digit year)"
                                        ],
                                        "formulas": [
                                            "Boundary start date = '10/15/' + application_year",
                                            "Boundary end date = '12/31/' + application_year",
                                            "Validation: application_date >= Boundary start date AND application_date <= Boundary end date"
                                        ],
                                        "outputs": [
                                            "'is_application_date_valid': Boolean indicating whether application_date is within the specified range"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_application_date_range",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date to be validated. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the application_date. Output from subtask 1.a.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_3']['application_and_tax_validation']['1.a']['application_year']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the application_date is within the specified range."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.c",
                                        "description": "Validate that '1b Start Date (From URLA)' is less than or equal to the date calculated by subtracting 5 years from the Application Date. First, extract the start date from the first employer in the 'current_employer' list under 'URLA' for the first borrower. Then perform a date arithmetic operation on the application_date to subtract 5 years and compare the two dates.",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value",
                                            "'start_date_urla': input_data -> borrowers (list) -> first borrower -> URLA -> current_employer (list) -> first employer -> start_date -> value"
                                        ],
                                        "formulas": [
                                            "Compute cutoff_date = application_date minus 5 years (use date arithmetic)",
                                            "Validation: start_date_urla <= cutoff_date"
                                        ],
                                        "outputs": [
                                            "'is_start_date_valid': Boolean indicating whether the URLA start date meets the condition"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_start_date_urla",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date for date arithmetic. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "start_date_urla",
                                                    "data_type": "String (Date)",
                                                    "description": "The start date from the first employer in the 'current_employer' list under 'URLA' for the first borrower. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['borrowers'][0]['URLA']['current_employer'][0]['start_date']['value']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_start_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the URLA start date meets the condition."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.d",
                                        "description": "Evaluate the results of validations from subtasks 1.b and 1.c. If either 'is_application_date_valid' or 'is_start_date_valid' is false, then the process must skip to HTP_Validation_Set_4.",
                                        "inputs": [
                                            "'is_application_date_valid': Output from subtask 1.b",
                                            "'is_start_date_valid': Output from subtask 1.c"
                                        ],
                                        "formulas": [
                                            "If (NOT is_application_date_valid) OR (NOT is_start_date_valid) then set the skip condition to jump to HTP_Validation_Set_4"
                                        ],
                                        "outputs": [
                                            "'skip_decision': A flag (or decision marker) indicating whether to skip to HTP_Validation_Set_4"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": "HTP_Validation_Set_4",
                                        "terminate_htp": true,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "evaluate_validation_results",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 1.b indicating if the application date is valid.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_3']['application_and_tax_validation']['1.b']['is_application_date_valid']"
                                                },
                                                {
                                                    "argument_name": "is_start_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 1.c indicating if the start date is valid.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_3']['application_and_tax_validation']['1.c']['is_start_date_valid']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "skip_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to skip to HTP_Validation_Set_4."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.e",
                                        "description": "Check for the existence of one of the alternative document sets. Two alternatives must be evaluated using the extracted application_year. For Alternative 1, ensure that the following documents exist for tax years (application_year - 1) and (application_year - 2): Tax Form 1040, Tax Form 1120S, and Tax Form 1120SSCHK1. For Alternative 2, ensure that Tax Form 1040, Tax Form 1120S, and Tax Form 1120SSCHK1 exist for tax year (application_year - 1).",
                                        "inputs": [
                                            "'application_year': Output from subtask 1.a",
                                            "'Tax Form 1040': input_data -> borrowers (list) -> first borrower -> Tax Form 1040 (list) -> each element's 'tax_year' field",
                                            "'Tax Form 1120S': input_data -> borrowers (list) -> first borrower -> Tax Form 1120S (list) -> each element's 'tax_year' field",
                                            "'Tax Form 1120SSCHK1': input_data -> borrowers (list) -> first borrower -> Tax Form 1120SSCHK1 (list) -> each element's 'tax_year' field"
                                        ],
                                        "formulas": [
                                            "For Alternative 1: Check that documents exist for both (application_year - 1) and (application_year - 2) for each required form",
                                            "For Alternative 2: Check that documents exist for (application_year - 1) for each required form"
                                        ],
                                        "outputs": [
                                            "'is_alternative_doc_set_found': Boolean indicating if either alternative document set is present",
                                            "'alternative_doc_set': A descriptor string that states which alternative set was found (e.g., 'Alternative 1' or 'Alternative 2')"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "check_alternative_document_sets",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the application_date. Output from subtask 1.a.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_3']['application_and_tax_validation']['1.a']['application_year']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1040",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1040 documents with each element's 'tax_year' field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1040.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['borrowers'][0]['Tax Form 1040']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120s",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120S documents with each element's 'tax_year' field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120S.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120sschk1",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120SSCHK1 documents with each element's 'tax_year' field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120SSCHK1.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120SCHG']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "is_alternative_doc_set_found",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates if either alternative document set is present."
                                                },
                                                {
                                                    "field_name": "alternative_doc_set",
                                                    "data_type": "String",
                                                    "description": "A descriptor string that states which alternative set was found (e.g., 'Alternative 1' or 'Alternative 2')."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.f",
                                        "description": "If an alternative document set is detected (i.e., is_alternative_doc_set_found is true), then immediately terminate the process.",
                                        "inputs": [
                                            "'is_alternative_doc_set_found': Output from subtask 1.e"
                                        ],
                                        "formulas": [
                                            "If is_alternative_doc_set_found is true, set a termination flag for the process"
                                        ],
                                        "outputs": [
                                            "'termination_status': Boolean indicating that the process has been terminated due to presence of an alternative document set"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "terminate_on_alternative_doc_set",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_alternative_doc_set_found",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 1.e indicating if an alternative document set is found.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_3']['application_and_tax_validation']['1.e']['is_alternative_doc_set_found']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates that the process has been terminated due to the presence of an alternative document set."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.g",
                                        "description": "If none of the alternative document sets are found (i.e., is_alternative_doc_set_found is false), then stop the process and return the prescribed discrepancy message.",
                                        "inputs": [
                                            "'is_alternative_doc_set_found': Output from subtask 1.e"
                                        ],
                                        "formulas": [],
                                        "outputs": [
                                            "'discrepancy_msg': \"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent year. Form 4868 is not acceptable as the application date is after October 15. As the business has been in existence for more than five years as reflected on Form 1003.\""
                                        ],
                                        "discrepancy_string": "Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent year. Form 4868 is not acceptable as the application date is after October 15. As the business has been in existence for more than five years as reflected on Form 1003.",
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "discrepancy_message_on_missing_docs",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_alternative_doc_set_found",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 1.e indicating if an alternative document set is found.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_3']['application_and_tax_validation']['1.e']['is_alternative_doc_set_found']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "discrepancy_message",
                                                    "data_type": "String",
                                                    "description": "The discrepancy message indicating missing required tax documents."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates that the process has been terminated due to missing documents."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "htp_validation_set_4",
                        "expert_instructions": "4a. Extract the Application Year (YYYY) from the Application Date.\n4b. Validate that Application Date is between 01/01/YYYY (inclusive) and 04/14/YYYY (exclusive).\n4c. Validate that (Application Date \u2212 5 years) < Employment Start Date \u2264 (Application Date \u2212 2 years).\n4d. If either condition in 4b or 4c is not satisfied, Skip to HTP_Validation_Set_5.\n4e. Check for the existence of one of the following alternative document sets:\nAlternative 1:\n\u2022 Tax Form 1040 for (YYYY-1)\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Tax Form 1120S for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-1)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\nAlternative 2:\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Tax Form 1040 for (YYYY-3)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120S for (YYYY-3)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-3)\n4f. If any one alternative document set is present, Terminate process.\n4g. If none of the alternative document sets are present,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.\"",
                        "discrepancy_messages": "",
                        "tasks": [
                            {
                                "task_name": "extract_application_year",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Extract the Application Year (YYYY) from the Application Date. This subtask takes the 'application_date' value from the root input and extracts the 4-digit year. The date is provided as a string (formats such as MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY). The extraction is performed by parsing the date string and retrieving the 4-digit year component.",
                                        "inputs": [
                                            "'application_date': input_data -> 'application_date' -> 'value'"
                                        ],
                                        "formulas": [
                                            "Parse the 'application_date' string and extract the year portion (e.g. if the date is '03/15/2022', then the year is '2022')."
                                        ],
                                        "outputs": [
                                            "'application_year': The 4-digit year string (YYYY) extracted from the Application Date."
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "extract_application_year",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "Date in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                }
                                            ],
                                            "return_type": "String",
                                            "return_description": [
                                                {
                                                    "field_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year (YYYY) extracted from the application_date."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "validate_application_date_range",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Validate that the Application Date is within the acceptable range of 01/01/YYYY (inclusive) and 04/14/YYYY (exclusive), where YYYY is the year extracted from the Application Date. The subtask converts the Application Date string to a date object and compares it against the lower bound (January 1 of the application year) and the upper bound (April 14 of the same year).",
                                        "inputs": [
                                            "'application_date': input_data -> 'application_date' -> 'value'",
                                            "'application_year': extracted from processing the Application Date as described in task extract_application_year"
                                        ],
                                        "formulas": [
                                            "Let lower_bound = January 1, {application_year} and upper_bound = April 14, {application_year}. If Application Date >= lower_bound and Application Date < upper_bound then the date is valid; otherwise it is invalid."
                                        ],
                                        "outputs": [
                                            "'is_application_date_valid': A Boolean that indicates whether the Application Date falls within the required range."
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": "HTP_Validation_Set_5",
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_application_date_range",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date to be validated. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year (YYYY) extracted from the application_date. This is an output from task 'extract_application_year'.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_4']['extract_application_year']['1.a']['application_year']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the Application Date falls within the required range."
                                                },
                                                {
                                                    "field_name": "skip_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to skip to HTP_Validation_Set_5."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "validate_employment_start_date",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Validate that the Employment Start Date (from the first current employer record) falls within the interval (Application Date - 5 years) < Employment Start Date \u2264 (Application Date - 2 years). In this step, parse the Application Date and subtract 5 and 2 years respectively to compute the lower and upper bounds. Then, convert the Employment Start Date (retrieved from the first item of current employers) into a date object and compare with these computed bounds.",
                                        "inputs": [
                                            "'application_date': input_data -> 'application_date' -> 'value'",
                                            "'employment_start_date': input_data -> 'borrowers' -> first borrower -> 'URLA' -> 'current_employer' -> first employer -> 'start_date'"
                                        ],
                                        "formulas": [
                                            "Calculate lower_bound = (Application Date minus 5 years) and upper_bound = (Application Date minus 2 years). The condition to check is: lower_bound < Employment Start Date \u2264 upper_bound."
                                        ],
                                        "outputs": [
                                            "'is_employment_start_date_valid': A Boolean indicating whether the Employment Start Date is within the computed range."
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": "HTP_Validation_Set_5",
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_employment_start_date_range",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date from which the lower and upper bounds are calculated. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "employment_start_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The start date of employment from the first current employer record. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['borrowers'][0]['URLA']['current_employer'][0]['start_date']['value']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "is_employment_start_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the Employment Start Date is within the computed range."
                                                },
                                                {
                                                    "field_name": "skip_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to skip to HTP_Validation_Set_5."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "check_validation_flags",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Consolidate validations from the Application Date range check and the Employment Start Date check. Evaluate if either 'is_application_date_valid' or 'is_employment_start_date_valid' is false. If any of these validations fail, then the process should immediately skip to 'HTP_Validation_Set_5'.",
                                        "inputs": [
                                            "'is_application_date_valid': output from validate_application_date_range subtask",
                                            "'is_employment_start_date_valid': output from validate_employment_start_date subtask"
                                        ],
                                        "formulas": [
                                            "If (is_application_date_valid == false) OR (is_employment_start_date_valid == false) then flag the error condition to trigger the HTP skip."
                                        ],
                                        "outputs": [
                                            "'proceed_to_next_htp': A Boolean value that is true if either validation failed (thus triggering the skip to HTP_Validation_Set_5) and false if both validations pass."
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": "HTP_Validation_Set_5",
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "consolidate_validation_flags",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the Application Date falls within the required range. Output from validate_application_date_range subtask.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_4']['validate_application_date_range']['1.a']['is_application_date_valid']"
                                                },
                                                {
                                                    "argument_name": "is_employment_start_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the Employment Start Date is within the computed range. Output from validate_employment_start_date subtask.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_4']['validate_employment_start_date']['1.a']['is_employment_start_date_valid']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "proceed_to_next_htp",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean value that is true if either validation failed (thus triggering the skip to HTP_Validation_Set_5) and false if both validations pass."
                                                },
                                                {
                                                    "field_name": "skip_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to skip to HTP_Validation_Set_5."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "check_alternative_document_sets",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Check for the existence of one of the following alternative document sets using the extracted application year:\n\nAlternative 1:\n\u2022 Tax Form 1040 for (YYYY-1)\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Tax Form 1120S for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-1)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n\nAlternative 2:\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Tax Form 1040 for (YYYY-3)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120S for (YYYY-3)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-3)\n\nFor each alternative set, the subtask searches the respective document lists in the input. Use the following traversal paths:\n- 'Tax Form 1040': input_data -> 'Tax Form 1040' (list)\n- 'Tax Form 1120S': input_data -> 'Tax Form 1120S' (assumed list)\n- 'Tax Form 1120SSCHK1': input_data -> 'Tax Form 1120SSCHK1' (assumed list)\n\nThe tax year for each required document is calculated based on the extracted application year (YYYY) minus the required offset.",
                                        "inputs": [
                                            "'Tax Form 1040': input_data -> 'Tax Form 1040' (list)",
                                            "'Tax Form 1120S': input_data -> 'Tax Form 1120S' (assumed list)",
                                            "'Tax Form 1120SSCHK1': input_data -> 'Tax Form 1120SSCHK1' (assumed list)",
                                            "'application_year': extracted from task extract_application_year"
                                        ],
                                        "formulas": [
                                            "For Alternative 1, check if documents exist with tax_year values equal to (application_year - 1) and (application_year - 2) for each required form. For Alternative 2, check if documents exist with tax_year values equal to (application_year - 2) and (application_year - 3) for each required form. If either set is completely present, then set is_alternative_document_set_present to true."
                                        ],
                                        "outputs": [
                                            "'is_alternative_document_set_present': A Boolean indicating whether any one alternative document set is fully present."
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "check_alternative_document_sets",
                                            "arguments": [
                                                {
                                                    "argument_name": "tax_form_1040",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1040 documents.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1040.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['borrowers'][0]['Tax Form 1040']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120s",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120S documents.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120S.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120sschk1",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120SSCHK1 documents.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120SSCHK1.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120SCHG']"
                                                },
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year (YYYY) extracted from the application_date.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_4']['extract_application_year']['1.a']['application_year']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_alternative_document_set_present",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean indicating whether any one alternative document set is fully present."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "terminate_if_documents_found",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Terminate the process if any one alternative document set is present. In this subtask, check the Boolean flag from the alternative document set check. If it is true, then the process is terminated immediately.",
                                        "inputs": [
                                            "'is_alternative_document_set_present': output from check_alternative_document_sets subtask"
                                        ],
                                        "formulas": [
                                            "If is_alternative_document_set_present == true, then mark the termination flag."
                                        ],
                                        "outputs": [
                                            "'terminate_process_flag': A Boolean value which will be true if an alternative document set is present."
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "terminate_if_alternative_documents_present",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_alternative_document_set_present",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean indicating whether any one alternative document set is fully present. This is the output from the check_alternative_document_sets subtask.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_4']['check_alternative_document_sets']['1.a']['is_alternative_document_set_present']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "terminate_process_flag",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean value which will be true if an alternative document set is present."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to terminate the process."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "return_discrepancy_for_missing_documents",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "If none of the alternative document sets are present (i.e. is_alternative_document_set_present is false), then stop the process and return the following discrepancy message: 'Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.' This indicates that the required documentation is missing.",
                                        "inputs": [
                                            "'is_alternative_document_set_present': output from check_alternative_document_sets subtask"
                                        ],
                                        "formulas": [
                                            "If is_alternative_document_set_present == false then return the discrepancy message and set process termination."
                                        ],
                                        "outputs": [
                                            "'discrepancy_msg': The discrepancy message indicating missing Tax Returns and/or Business Tax Returns."
                                        ],
                                        "discrepancy_string": "Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.",
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "check_missing_documents_discrepancy",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_alternative_document_set_present",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean indicating whether any one alternative document set is fully present. Output from check_alternative_document_sets subtask.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_4']['check_alternative_document_sets']['1.a']['is_alternative_document_set_present']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "discrepancy_message",
                                                    "data_type": "String",
                                                    "description": "The discrepancy message indicating missing Tax Returns and/or Business Tax Returns."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to terminate the process."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "htp_validation_set_5",
                        "expert_instructions": "5a. Extract the Application Year (YYYY) from the Application Date.\n5b. Validate that Application Date is between 04/15/YYYY (inclusive) and 10/14/YYYY (exclusive).\n5c. Validate that (Application Date \u2212 5 years) < Employment Start Date \u2264 (Application Date \u2212 2 years).\n5d. If either condition in 5b or 5c is not satisfied, Skip to HTP_Validation_Set_6.\n5e. Check for the existence of one of the following alternative document sets:\nAlternative 1:\n\u2022 Tax Form 1040 for (YYYY-1)\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Tax Form 1120S for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-1)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\nAlternative 2:\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Tax Form 1040 for (YYYY-3)\n\u2022 Form 4868 for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120S for (YYYY-3)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-3)\n\u2022 Form 7004 for (YYYY-1)\n5f. If any one alternative document set is present, Terminate process.\n5g. If none of the alternative document sets are present,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. Form 4868 and/or Form 7004 is missing, which is required if tax returns for the most recent year are unavailable. As the business has been in existence for less than five years as reflected on Form 1003.\"",
                        "discrepancy_messages": "",
                        "tasks": [
                            {
                                "task_name": "extract_application_year",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Extract the year (YYYY) from the Application Date. This involves parsing the 'application_date' field (accessed via input_data -> 'application_date' -> 'value') and extracting the year component. The expected output is the year string in 'YYYY' format.",
                                        "inputs": [
                                            "'application_date': input_data -> 'application_date' -> 'value'"
                                        ],
                                        "formulas": [
                                            "For date formats such as MM/DD/YYYY, split the string by '/' and take the third element as the year. For example, year = split(application_date, '/')[2]."
                                        ],
                                        "outputs": [
                                            "'application_year': The extracted year as a string (YYYY)"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "extract_application_year",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "Date in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                }
                                            ],
                                            "return_type": "String",
                                            "return_description": [
                                                {
                                                    "field_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year (YYYY) extracted from the application_date."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "validate_application_date_range",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Validate that the Application Date is between 04/15/YYYY (inclusive) and 10/14/YYYY (exclusive). Here, YYYY is the application year extracted in the previous task. Convert the 'application_date' string into its month and day components and compare these against the lower bound '04/15/YYYY' and the upper bound '10/14/YYYY'.",
                                        "inputs": [
                                            "'application_date': input_data -> 'application_date' -> 'value'",
                                            "'application_year': output from extract_application_year -> 'application_year'"
                                        ],
                                        "formulas": [
                                            "Lower bound date = '04/15/' + application_year; Upper bound date = '10/14/' + application_year. Then verify: lower_bound <= application_date < upper_bound using appropriate date conversion and comparison functions."
                                        ],
                                        "outputs": [
                                            "'is_app_date_valid': A Boolean indicating whether the application date falls within the specified range"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_application_date_range",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String",
                                                    "description": "The application date to be validated. Date in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year (YYYY) extracted from the application_date. Output from task 'extract_application_year'.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_5']['extract_application_year']['1.a']['application_year']"
                                                }
                                            ],
                                            "function_description": "Validates that the application date is between 04/15/YYYY (inclusive) and 10/14/YYYY (exclusive) where YYYY is the application year.",
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_app_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the application date falls within the specified range."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "validate_employment_start_date_range",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Validate that the Employment Start Date satisfies the condition: (Application Date \u2212 5 years) < Employment Start Date \u2264 (Application Date \u2212 2 years). Extract the Employment Start Date from the first current employer using the path: input_data -> 'borrowers' (list) -> first item -> 'URLA' -> 'current_employer' (list) -> first item -> 'start_date' -> 'value'. Compute the lower boundary by subtracting 5 years from the application_date and the upper boundary by subtracting 2 years from the application_date; then check whether the extracted employment start date falls within these bounds.",
                                        "inputs": [
                                            "'application_date': input_data -> 'application_date' -> 'value'",
                                            "'employment_start_date': input_data -> 'borrowers' (list) -> first item -> 'URLA' -> 'current_employer' (list) -> first item -> 'start_date' -> 'value'"
                                        ],
                                        "formulas": [
                                            "Lower limit = application_date shifted by -5 years; Upper limit = application_date shifted by -2 years. Validate using: (lower_limit < employment_start_date) AND (employment_start_date <= upper_limit)."
                                        ],
                                        "outputs": [
                                            "'is_employment_start_date_valid': A Boolean indicating whether the employment start date meets the condition"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_employment_start_date",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date from which the employment start date range is calculated. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "employment_start_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The start date of employment for the first current employer. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['borrowers'][0]['URLA']['current_employer'][0]['start_date']['value']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_employment_start_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the employment start date falls within the specified range."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "handle_date_validation_failure",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Examine the results from the Application Date range validation and the Employment Start Date range validation. If either 'is_app_date_valid' or 'is_employment_start_date_valid' is false, then the validation has failed and the process should skip to the HTP 'HTP_Validation_Set_6'.",
                                        "inputs": [
                                            "'is_app_date_valid': output from validate_application_date_range -> 'is_app_date_valid'",
                                            "'is_employment_start_date_valid': output from validate_employment_start_date_range -> 'is_employment_start_date_valid'"
                                        ],
                                        "formulas": [
                                            "if (is_app_date_valid == false) OR (is_employment_start_date_valid == false) then the skip condition is met."
                                        ],
                                        "outputs": [
                                            "'skip_condition_met': A Boolean flag indicating that a skip is required"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": "HTP_Validation_Set_6",
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "check_date_validation_failure",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_app_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the application date falls within the specified range. Output from validate_application_date_range.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_5']['validate_application_date_range']['1.a']['is_app_date_valid']"
                                                },
                                                {
                                                    "argument_name": "is_employment_start_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the employment start date falls within the specified range. Output from validate_employment_start_date_range.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_5']['validate_employment_start_date_range']['1.a']['is_employment_start_date_valid']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "skip_condition_met",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean flag indicating that a skip is required."
                                                },
                                                {
                                                    "field_name": "skip_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the HTP should be skipped to 'HTP_Validation_Set_6'."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "check_alternative_document_sets",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Inspect the input data for the presence of one of the alternative document sets. For Alternative 1, verify that all of the following documents are present for the respective computed years based on application_year: Tax Form 1040 for (application_year - 1) and (application_year - 2), Tax Form 1120S for (application_year - 1) and (application_year - 2), and Tax Form 1120SSCHK1 for (application_year - 1) and (application_year - 2). For Alternative 2, verify the presence of: Tax Form 1040 for (application_year - 2) and (application_year - 3), Form 4868 for (application_year - 1), Tax Form 1120S for (application_year - 2) and (application_year - 3), Tax Form 1120SSCHK1 for (application_year - 2) and (application_year - 3), and Form 7004 for (application_year - 1). Use the provided input paths to access these documents from the input data. Note that the required documents for each alternative can be found in different sections of the input data.",
                                        "inputs": [
                                            "'application_year': output from extract_application_year -> 'application_year'",
                                            "'Tax Form 1040': input_data -> 'Tax Form 1040'",
                                            "'Tax Form 1120S': input_data -> 'other_doc_types' -> 'Tax Form 1120' (assuming Tax Form 1120S is located here if provided)",
                                            "'Tax Form 1120SSCHK1': input_data -> 'other_doc_types' -> 'Tax Form 1120SSCHK1' (if available)",
                                            "'Form 4868': input_data -> 'Tax Form 4868'",
                                            "'Form 7004': input_data -> 'other_doc_types' -> 'Tax Form 7004'"
                                        ],
                                        "formulas": [
                                            "For Alternative 1: Verify existence of documents with tax_year equal to (application_year - 1) AND (application_year - 2) for each required form. For Alternative 2: Verify existence of documents with tax_year equal to (application_year - 2) AND (application_year - 3) for the Tax Form 1040, Tax Form 1120S, and Tax Form 1120SSCHK1; ensure Form 4868 exists for (application_year - 1) and Form 7004 exists for (application_year - 1)."
                                        ],
                                        "outputs": [
                                            "'alternative_set_found': A Boolean indicating whether at least one complete alternative document set is present"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "inspect_alternative_document_sets",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year (YYYY) extracted from the application_date.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_5']['extract_application_year']['1.a']['application_year']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1040",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1040 documents.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1040.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['borrowers'][0]['Tax Form 1040']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120s",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120S documents located in 'other_doc_types'.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120.taxForm1120TaxYear String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120sschk1",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120SSCHK1 documents located in 'other_doc_types'.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120.taxForm1120TaxYear String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120']"
                                                },
                                                {
                                                    "argument_name": "form_4868",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Form 4868 documents.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "String/Empty string/Null"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['borrowers'][0]['Tax Form 4868']"
                                                },
                                                {
                                                    "argument_name": "form_7004",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Form 7004 documents located in 'other_doc_types'.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Form 7004.e08dae02-2767-457e-a972-251fd499e117.Tax Year"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 7004']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "alternative_set_found",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean indicating whether at least one complete alternative document set is present."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "terminate_on_alternative_document_set",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "If an alternative document set is found (i.e., 'alternative_set_found' is true from the previous task), immediately terminate the process. This indicates that the necessary alternative documentation exists and no further discrepancy handling is needed.",
                                        "inputs": [
                                            "'alternative_set_found': output from check_alternative_document_sets -> 'alternative_set_found'"
                                        ],
                                        "formulas": [
                                            "if alternative_set_found == true then trigger termination of the process."
                                        ],
                                        "outputs": [
                                            "'terminate_process': A Boolean flag set to true to indicate the process should be terminated"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "terminate_if_alternative_set_found",
                                            "arguments": [
                                                {
                                                    "argument_name": "alternative_set_found",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean indicating whether at least one complete alternative document set is present. Output from subtask 'check_alternative_document_sets' -> 'alternative_set_found'.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_5']['check_alternative_document_sets']['1.a']['alternative_set_found']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean flag set to true to indicate the process should be terminated."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "handle_no_alternative_document_set",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "If no alternative document set is found (i.e., 'alternative_set_found' is false), stop the process and return the specified discrepancy message. This message indicates that the required personal and/or business tax returns and associated forms are missing.",
                                        "inputs": [
                                            "'alternative_set_found': output from check_alternative_document_sets -> 'alternative_set_found'"
                                        ],
                                        "formulas": [
                                            "if alternative_set_found == false then set discrepancy message and terminate the process."
                                        ],
                                        "outputs": [
                                            "'discrepancy_msg': The discrepancy message stating the missing tax documents"
                                        ],
                                        "discrepancy_string": "Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. Form 4868 and/or Form 7004 is missing, which is required if tax returns for the most recent year are unavailable. As the business has been in existence for less than five years as reflected on Form 1003.",
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "handle_no_alternative_document_set",
                                            "arguments": [
                                                {
                                                    "argument_name": "alternative_set_found",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean indicating whether at least one complete alternative document set is present. Output from subtask 'check_alternative_document_sets'.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_5']['check_alternative_document_sets']['1.a']['alternative_set_found']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "discrepancy_message",
                                                    "data_type": "String",
                                                    "description": "The discrepancy message stating the missing tax documents."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean flag set to true to indicate the process should be terminated."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "htp_validation_set_6",
                        "expert_instructions": "6a. Extract the Application Year (YYYY) from the Application Date.\n6b. Validate that Application Date is between 10/15/YYYY (inclusive) and 12/31/YYYY (inclusive).\n6c. Validate that (Application Date \u2212 5 years) < Employment Start Date \u2264 (Application Date \u2212 2 years).\n6d. If either condition in 6b or 6c is not satisfied, Skip to HTP_Validation_Set_7.\n6e. Check for the existence of the following document set:\n\u2022 Tax Form 1040 for (YYYY-1)\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Tax Form 1120S for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-1)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n6f. If the document set is present, Terminate process.\n6g. If the document set is missing,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. Form 4868 is not acceptable as the application date is after October 15th. As the business has been in existence for less than five years as reflected on Form 1003.\"",
                        "discrepancy_messages": "",
                        "tasks": [
                            {
                                "task_name": "extract_application_year",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Extract the Application Year (YYYY) from the Application Date. Retrieve the application date from the root-level input, navigate via 'application_date' -> 'value', parse the date string (which may be in MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY format), and extract the 4\u2010digit year component.",
                                        "inputs": [
                                            "'application_date': input_data -> 'application_date' -> 'value'"
                                        ],
                                        "formulas": [
                                            "Parse the application_date string using delimiters ('/', '-', or '.') to isolate the month, day, and year components. The year component (last element) is the Application Year (YYYY)."
                                        ],
                                        "outputs": [
                                            "'application_year': The 4-digit year extracted from the application date (YYYY format)"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "extract_application_year",
                                            "function_description": "Extracts the 4-digit year from the application date string, which can be in the format MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "Date in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                }
                                            ],
                                            "return_type": "String",
                                            "return_description": [
                                                {
                                                    "field_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year (YYYY) extracted from the application_date."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "validate_application_date_range",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Validate that the Application Date is between 10/15/YYYY (inclusive) and 12/31/YYYY (inclusive). First, extract the month, day, and year from the application date. Then, construct the lower bound as '10/15/' concatenated with the Application Year and the upper bound as '12/31/' concatenated with the Application Year. Finally, check if the application date falls within these two boundaries (inclusive).",
                                        "inputs": [
                                            "'application_date': input_data -> 'application_date' -> 'value'",
                                            "'application_year': output from extract_application_year -> 'application_year'"
                                        ],
                                        "formulas": [
                                            "Lower bound = '10/15/' + application_year",
                                            "Upper bound = '12/31/' + application_year",
                                            "Validity = (application_date >= Lower bound) AND (application_date <= Upper bound)"
                                        ],
                                        "outputs": [
                                            "'is_application_date_valid': Boolean indicating whether the application date is within the valid range"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": "HTP_Validation_Set_7",
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_application_date_range",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date to be validated. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year (YYYY) extracted from the application_date. This is an output from the subtask 'extract_application_year'.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_6']['extract_application_year']['1.a']['application_year']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the application date is within the valid range."
                                                },
                                                {
                                                    "field_name": "skip_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to skip to the next HTP 'HTP_Validation_Set_7'."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "validate_employment_start_date_range",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Validate that the Employment Start Date is within the range defined by (Application Date - 5 years) < Employment Start Date \u2264 (Application Date - 2 years). Extract the Application Date from the root-level input and the Employment Start Date from the borrower's current employer record by navigating to: 'borrowers' (list) \u2192 first borrower \u2192 'URLA' \u2192 'current_employer' (list) \u2192 first employer \u2192 'start_date' -> 'value'. Then, subtract 5 years and 2 years from the Application Date to determine the lower and upper bounds, respectively, and verify that the Employment Start Date is after the lower bound and on or before the upper bound.",
                                        "inputs": [
                                            "'application_date': input_data -> 'application_date' -> 'value'",
                                            "'employment_start_date': input_data -> 'borrowers' -> first borrower -> 'URLA' -> 'current_employer' (list) -> first employer -> 'start_date' -> 'value'"
                                        ],
                                        "formulas": [
                                            "Lower limit = application_date minus 5 years",
                                            "Upper limit = application_date minus 2 years",
                                            "Validity = (employment_start_date > Lower limit) AND (employment_start_date <= Upper limit)"
                                        ],
                                        "outputs": [
                                            "'is_employment_start_date_valid': Boolean indicating if the employment start date falls within the specified range"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": "HTP_Validation_Set_7",
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_employment_start_date",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date from the root-level input. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "employment_start_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The employment start date from the borrower's current employer record. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['borrowers'][0]['URLA']['current_employer'][0]['start_date']['value']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "is_employment_start_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates if the employment start date falls within the specified range."
                                                },
                                                {
                                                    "field_name": "skip_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to skip to the next HTP 'HTP_Validation_Set_7'."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "control_skip_on_validation_failure",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Check the results of the previous validations. If either the Application Date validation ('is_application_date_valid') or the Employment Start Date validation ('is_employment_start_date_valid') returns false, then the process should skip to HTP_Validation_Set_7.",
                                        "inputs": [
                                            "'is_application_date_valid': output from validate_application_date_range -> 'is_application_date_valid'",
                                            "'is_employment_start_date_valid': output from validate_employment_start_date_range -> 'is_employment_start_date_valid'"
                                        ],
                                        "formulas": [
                                            "If NOT (is_application_date_valid AND is_employment_start_date_valid) then skip_decision = 'HTP_Validation_Set_7'"
                                        ],
                                        "outputs": [
                                            "'skip_decision': String that is set to 'HTP_Validation_Set_7' if any validation fails; otherwise, an empty string"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": "HTP_Validation_Set_7",
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "control_skip_on_validation_failure",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the application date is within the valid range. Output from validate_application_date_range.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_6']['validate_application_date_range']['1.a']['is_application_date_valid']"
                                                },
                                                {
                                                    "argument_name": "is_employment_start_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates if the employment start date falls within the specified range. Output from validate_employment_start_date_range.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_6']['validate_employment_start_date_range']['1.a']['is_employment_start_date_valid']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "skip_decision",
                                                    "data_type": "String",
                                                    "description": "Set to 'HTP_Validation_Set_7' if any validation fails; otherwise, an empty string."
                                                },
                                                {
                                                    "field_name": "skip_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to skip to the next HTP 'HTP_Validation_Set_7'."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "check_document_set_existence",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Check for the existence of the required document set using the Application Year extracted earlier. The document set must include all of the following for the two most recent years: (1) Tax Form 1040 for (application_year - 1) and (application_year - 2), (2) Tax Form 1120S for (application_year - 1) and (application_year - 2), and (3) Tax Form 1120SSCHK1 for (application_year - 1) and (application_year - 2). For each document type, navigate to the respective collection (e.g., for Tax Form 1040, use: input_data -> 'Tax Form 1040' -> each item\u2019s 'tax_year' -> 'value'). For the other two document types, assume a similar structure exists in the input. Verify that at least one document exists for each required tax year.",
                                        "inputs": [
                                            "'application_year': output from extract_application_year -> 'application_year'",
                                            "'Tax Form 1040': input_data -> 'Tax Form 1040' (list) -> each item's 'tax_year' -> 'value'",
                                            "'Tax Form 1120S': input_data -> 'Tax Form 1120S' (assumed list) -> each item's 'tax_year' -> 'value'",
                                            "'Tax Form 1120SSCHK1': input_data -> 'Tax Form 1120SSCHK1' (assumed list) -> each item's 'tax_year' -> 'value'"
                                        ],
                                        "formulas": [
                                            "Expected years = [application_year - 1, application_year - 2]",
                                            "For each document type, check if there exists at least one document with 'tax_year' matching each expected year",
                                            "document_set_exists = true only if all three document types have documents for both required years"
                                        ],
                                        "outputs": [
                                            "'document_set_exists': Boolean indicating whether the complete required document set exists"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "check_document_set_existence",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year (YYYY) extracted from the application_date.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_6']['extract_application_year']['1.a']['application_year']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1040",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1040 documents, each containing a 'tax_year' field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1040.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['borrowers'][0]['Tax Form 1040']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120s",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120S documents, each containing a 'tax_year' field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120S.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120sschk1",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120SSCHK1 documents, each containing a 'tax_year' field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120SSCHK1.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "document_set_exists",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the complete required document set exists for the two most recent years."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "terminate_if_documents_exist",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "If the document set exists as verified in the previous step, then terminate the process. No further action is required since the complete document set is present.",
                                        "inputs": [
                                            "'document_set_exists': output from check_document_set_existence -> 'document_set_exists'"
                                        ],
                                        "formulas": [
                                            "If document_set_exists is true then process termination flag is set"
                                        ],
                                        "outputs": [
                                            "'termination_status': A string indicating that the process is terminated due to a complete document set"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "terminate_if_document_set_exists",
                                            "arguments": [
                                                {
                                                    "argument_name": "document_set_exists",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the complete required document set exists for the two most recent years. Output from subtask 'check_document_set_existence'.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_6']['check_document_set_existence']['1.a']['document_set_exists']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "termination_status",
                                                    "data_type": "String",
                                                    "description": "A string indicating that the process is terminated due to a complete document set."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to terminate the process."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "stop_process_if_documents_missing",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "If the required document set is missing (i.e. 'document_set_exists' is false), then stop the process and return the corresponding discrepancy message.",
                                        "inputs": [
                                            "'document_set_exists': output from check_document_set_existence -> 'document_set_exists'"
                                        ],
                                        "formulas": [
                                            "If document_set_exists is false then return the discrepancy message"
                                        ],
                                        "outputs": [
                                            "'discrepancy_msg': Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. Form 4868 is not acceptable as the application date is after October 15th. As the business has been in existence for less than five years as reflected on Form 1003."
                                        ],
                                        "discrepancy_string": "Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. Form 4868 is not acceptable as the application date is after October 15th. As the business has been in existence for less than five years as reflected on Form 1003.",
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "stop_process_if_documents_missing",
                                            "arguments": [
                                                {
                                                    "argument_name": "document_set_exists",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the complete required document set exists for the two most recent years. Output from task 'check_document_set_existence'.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_6']['check_document_set_existence']['1.a']['document_set_exists']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "discrepancy_message",
                                                    "data_type": "String",
                                                    "description": "Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. Form 4868 is not acceptable as the application date is after October 15th. As the business has been in existence for less than five years as reflected on Form 1003."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to terminate the process."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "htp_validation_set_7",
                        "expert_instructions": "7a. Extract the Application Year (YYYY) from the Application Date.\n7b. Validate that Application Date is between 01/01/YYYY (inclusive) and 04/14/YYYY (exclusive).\n7c. Validate that Employment Start Date \u2265 (Application Date \u2212 2 years).\n7d. Validate that the Employment Start Date year equals (YYYY - 2).\n7e. If any condition in 7b, 7c, or 7d is not satisfied, Skip to HTP_Validation_Set_8.\n7f. Check for the existence of the following document set:\n\u2022 Tax Form 1040 for (YYYY-1)\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Tax Form 1120S for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-1)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n7g. If the document set is present, Terminate process.\n7h. If the document set is missing,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.\"",
                        "discrepancy_messages": "",
                        "tasks": [
                            {
                                "task_name": "application_and_employment_validations",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Extract the Application Year (YYYY) from the Application Date. Parse the 'application_date' field (expected in the format MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY) and extract the 4-digit year component. This extracted year will be used for subsequent validations.",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value"
                                        ],
                                        "formulas": [],
                                        "outputs": [
                                            "'application_year': The extracted 4-digit year (YYYY) from the application_date"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "extract_application_year",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date from which the year is to be extracted. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                }
                                            ],
                                            "return_type": "String",
                                            "return_description": [
                                                {
                                                    "field_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year (YYYY) extracted from the application_date."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.b",
                                        "description": "Validate that the Application Date is between 01/01/YYYY (inclusive) and 04/14/YYYY (exclusive). First, using the extracted application_year from step 1.a, construct the lower bound date '01/01/' + application_year and the upper bound date '04/14/' + application_year; then, parse the application_date and check that it falls within these bounds. This validation ensures the application date is within the acceptable period.",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value",
                                            "'application_year': output from subtask 1.a"
                                        ],
                                        "formulas": [
                                            "Lower Bound = '01/01/' + application_year",
                                            "Upper Bound = '04/14/' + application_year",
                                            "Check: Lower Bound <= application_date < Upper Bound"
                                        ],
                                        "outputs": [
                                            "'is_application_date_valid': A Boolean indicating if the application_date is within the required date range"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_application_date_range",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date to be validated. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year (YYYY) extracted from the application_date in subtask 1.a.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_7']['application_and_employment_validations']['1.a']['application_year']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the application date is within the valid range."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.c",
                                        "description": "Validate that the Employment Start Date is greater than or equal to the Application Date minus 2 years. Extract the 'start_date' of the current employer from the first borrower by navigating to borrowers (list) -> first borrower -> 'URLA' -> 'current_employer' (list) -> first employer -> 'start_date'. Then, subtract 2 years from the parsed application_date and compare it with the extracted employment start date.",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value",
                                            "'current_employer_start_date': input_data -> borrowers (list) -> first borrower -> URLA -> current_employer (list) -> first employer -> start_date"
                                        ],
                                        "formulas": [
                                            "Adjusted_Date = application_date minus 2 years",
                                            "Condition: current_employer_start_date >= Adjusted_Date"
                                        ],
                                        "outputs": [
                                            "'is_employment_start_date_valid': A Boolean indicating if the employment start date is on or after (application_date - 2 years)"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_employment_start_date",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date to be used for validation. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "current_employer_start_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The start date of the current employer. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['borrowers'][0]['URLA']['current_employer'][0]['start_date']['value']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_employment_start_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates if the employment start date is on or after (application_date - 2 years)."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.d",
                                        "description": "Validate that the Employment Start Date year equals (Application Year - 2). Extract the year from the employment start date (using the same traversal as in step 1.c) and compare it with the value obtained by subtracting 2 from the application_year derived in 1.a.",
                                        "inputs": [
                                            "'application_year': output from subtask 1.a",
                                            "'current_employer_start_date': input_data -> borrowers (list) -> first borrower -> URLA -> current_employer (list) -> first employer -> start_date"
                                        ],
                                        "formulas": [
                                            "Extracted_Employment_Year = Year portion from current_employer_start_date",
                                            "Condition: Extracted_Employment_Year == (int(application_year) - 2)"
                                        ],
                                        "outputs": [
                                            "'is_employment_start_date_year_valid': A Boolean indicating whether the year of the employment start date equals (application_year - 2)"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_employment_start_date_year",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year (YYYY) extracted from the application_date in subtask 1.a.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_7']['application_and_employment_validations']['1.a']['application_year']"
                                                },
                                                {
                                                    "argument_name": "current_employer_start_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The start date of the current employer. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['borrowers'][0]['URLA']['current_employer'][0]['start_date']['value']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_employment_start_date_year_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the year of the employment start date equals (application_year - 2)."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.e",
                                        "description": "Evaluate the validations from subtasks 1.b, 1.c, and 1.d. If any of the conditions (application date range, employment start date validity, or employment start date year match) is not satisfied, then skip to HTP_Validation_Set_8. This decision point ensures that if any of the required validations fail, the subsequent validations in this HTP are bypassed.",
                                        "inputs": [
                                            "'is_application_date_valid': output from subtask 1.b",
                                            "'is_employment_start_date_valid': output from subtask 1.c",
                                            "'is_employment_start_date_year_valid': output from subtask 1.d"
                                        ],
                                        "formulas": [
                                            "Overall Condition = is_application_date_valid AND is_employment_start_date_valid AND is_employment_start_date_year_valid"
                                        ],
                                        "outputs": [
                                            "'validation_decision': A Boolean indicating if all validations pass"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": "HTP_Validation_Set_8",
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "evaluate_validations",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 1.b indicating if the application date is valid.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_7']['application_and_employment_validations']['1.b']['is_application_date_valid']"
                                                },
                                                {
                                                    "argument_name": "is_employment_start_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 1.c indicating if the employment start date is valid.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_7']['application_and_employment_validations']['1.c']['is_employment_start_date_valid']"
                                                },
                                                {
                                                    "argument_name": "is_employment_start_date_year_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 1.d indicating if the employment start date year is valid.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_7']['application_and_employment_validations']['1.d']['is_employment_start_date_year_valid']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "validation_decision",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates if all validations pass."
                                                },
                                                {
                                                    "field_name": "skip_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to skip to the next HTP 'HTP_Validation_Set_8'."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "document_set_verification",
                                "subtasks": [
                                    {
                                        "subtask_id": "2.a",
                                        "description": "Check for the existence of the following document set for the two most recent years based on the extracted application_year: \u2022 Tax Form 1040 for (application_year - 1) and (application_year - 2); \u2022 Tax Form 1120S for (application_year - 1) and (application_year - 2); \u2022 Tax Form 1120SSCHK1 for (application_year - 1) and (application_year - 2). For each document type, traverse the respective input arrays to verify that at least one document exists with a 'tax_year' equal to the required year. If any one of these documents is missing for either year, mark the document set as incomplete.",
                                        "inputs": [
                                            "'application_year': output from subtask 1.a",
                                            "'Tax Form 1040': input_data -> Tax Form 1040 (list) -> each item -> tax_year -> value",
                                            "'Tax Form 1120S': input_data -> (Assumed document array for Tax Form 1120S) -> each item -> tax_year -> value",
                                            "'Tax Form 1120SSCHK1': input_data -> (Assumed document array for Tax Form 1120SSCHK1) -> each item -> tax_year -> value"
                                        ],
                                        "formulas": [
                                            "Required_Year1 = int(application_year) - 1",
                                            "Required_Year2 = int(application_year) - 2",
                                            "For each document type, check if there is at least one document where tax_year equals Required_Year1 and one where tax_year equals Required_Year2"
                                        ],
                                        "outputs": [
                                            "'is_document_set_complete': A Boolean indicating whether all required documents for the two most recent years are present"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "check_document_set_existence",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year (YYYY) extracted from the application_date. Output from subtask 1.a",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_7']['application_and_employment_validations']['1.a']['application_year']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1040",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1040 documents, each containing a 'tax_year' field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1040.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['borrowers'][0]['Tax Form 1040']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120s",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120S documents, each containing a 'tax_year' field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120S.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120sschk1",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120SSCHK1 documents, each containing a 'tax_year' field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120SSCHK1.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120SCHG']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_document_set_complete",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether all required documents for the two most recent years are present."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "2.b",
                                        "description": "If the required document set is present (i.e. is_document_set_complete is true), then terminate the process. This indicates that all necessary documents have been provided.",
                                        "inputs": [
                                            "'is_document_set_complete': output from subtask 2.a"
                                        ],
                                        "formulas": [],
                                        "outputs": [
                                            "'termination_status': A message indicating that the process is terminated since the document set is complete"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "terminate_process_if_documents_complete",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_document_set_complete",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 2.a indicating if the document set is complete.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_7']['document_set_verification']['2.a']['is_document_set_complete']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "termination_status",
                                                    "data_type": "String",
                                                    "description": "A message indicating that the process is terminated since the document set is complete."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to terminate the process."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "2.c",
                                        "description": "If the required document set is missing (i.e. is_document_set_complete is false), stop the process and return a discrepancy message. The discrepancy message to be returned is: 'Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.'",
                                        "inputs": [
                                            "'is_document_set_complete': output from subtask 2.a"
                                        ],
                                        "formulas": [],
                                        "outputs": [
                                            "'discrepancy_msg': The discrepancy message indicating the missing document set"
                                        ],
                                        "discrepancy_string": "Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.",
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "return_discrepancy_message_if_documents_incomplete",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_document_set_complete",
                                                    "data_type": "Boolean",
                                                    "description": "Output from subtask 2.a indicating if the document set is complete.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_7']['document_set_verification']['2.a']['is_document_set_complete']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "discrepancy_msg",
                                                    "data_type": "String",
                                                    "description": "The discrepancy message indicating the missing document set."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to terminate the process."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "htp_validation_set_8",
                        "expert_instructions": "8a. Extract the Application Year (YYYY) from the Application Date.\n8b. Validate that Application Date is between 01/01/YYYY (inclusive) and 12/31/YYYY (inclusive).\n8c. Validate that Employment Start Date \u2265 (Application Date \u2212 2 years).\n8d. Validate that the Employment Start Date year equals (YYYY - 2).\n8e. If any condition in 8b, 8c, or 8d is not satisfied, Skip to HTP_Validation_Set_9.\n8f. Check for the existence of the following document set:\n\u2022 Tax Form 1040 for (YYYY-1)\n\u2022 Tax Form 1040 for (YYYY-2)\n\u2022 Tax Form 1120S for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-2)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-1)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-2)\n8g. If the document set is present, Terminate process.\n8h. If the document set is missing,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.\"",
                        "discrepancy_messages": "",
                        "tasks": [
                            {
                                "task_name": "extract_application_year",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Extract the year (YYYY) from the 'application_date'. The application_date is provided as a string in a date format (MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY). To extract the year, split the string using '/', '-' or '.' as delimiters and take the element representing the year (typically the last element). This extracted year will be used in subsequent calculations.",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value"
                                        ],
                                        "formulas": [
                                            "year = last element after splitting application_date by ('/', '-', '.')"
                                        ],
                                        "outputs": [
                                            "'application_year': The 4-digit year extracted from the application_date"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "extract_application_year",
                                            "function_description": "Extracts the year (YYYY) from the 'application_date'. The application_date is provided as a string in a date format (MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY).",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "Date in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                }
                                            ],
                                            "return_type": "String",
                                            "return_description": [
                                                {
                                                    "field_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the application_date."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "validate_application_date_range",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Validate that the 'application_date' falls within the range 01/01/YYYY (inclusive) to 12/31/YYYY (inclusive) where YYYY is the extracted application_year. Construct the start boundary as '01/01/' + application_year and the end boundary as '12/31/' + application_year, then check if the application_date is between these bounds.",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value",
                                            "'application_year': value from output of extract_application_year"
                                        ],
                                        "formulas": [
                                            "start_boundary = '01/01/' + application_year",
                                            "end_boundary = '12/31/' + application_year",
                                            "is_application_date_valid = (application_date >= start_boundary) AND (application_date <= end_boundary)"
                                        ],
                                        "outputs": [
                                            "'is_application_date_valid': Boolean indicating whether application_date is within the valid range"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_application_date",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date to be validated. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the application_date. This is an output from subtask 'extract_application_year'.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_8']['extract_application_year']['1.a']['application_year']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the application_date is within the valid range of 01/01/YYYY to 12/31/YYYY."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "validate_employment_start_date",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Validate that the Employment Start Date from the current employer is greater than or equal to the Application Date minus 2 years. Use date arithmetic to subtract 2 years from the application_date and compare the resulting threshold with the employment start date.",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value",
                                            "'current_employer_start_date': input_data -> borrowers -> first borrower -> URLA -> current_employer -> first item -> start_date -> value"
                                        ],
                                        "formulas": [
                                            "date_threshold = application_date minus 2 years (using appropriate date arithmetic)",
                                            "is_employment_start_date_within_range = (current_employer_start_date >= date_threshold)"
                                        ],
                                        "outputs": [
                                            "'is_employment_start_date_within_range': Boolean indicating if the employment start date satisfies the condition"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_employment_start_date_within_range",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "current_employer_start_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The start date of the current employer in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['borrowers'][0]['URLA']['current_employer'][0]['start_date']['value']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_employment_start_date_within_range",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates if the employment start date is greater than or equal to the application date minus 2 years."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.b",
                                        "description": "Validate that the year extracted from the Employment Start Date equals (application_year - 2). Extract the 4-digit year from the current_employer's start date and compare with the computed value (application_year - 2). For example, if application_year is 2023, then employment start year must be 2021.",
                                        "inputs": [
                                            "'application_year': value from output of extract_application_year",
                                            "'current_employer_start_date': input_data -> borrowers -> first borrower -> URLA -> current_employer -> first item -> start_date -> value"
                                        ],
                                        "formulas": [
                                            "employment_start_year = last element after splitting current_employer_start_date by ('/', '-', '.')",
                                            "is_employment_start_year_valid = (employment_start_year == (application_year - 2))"
                                        ],
                                        "outputs": [
                                            "'is_employment_start_year_valid': Boolean indicating whether the employment start year equals (application_year - 2)"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_employment_start_year",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the application_date.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_8']['extract_application_year']['1.a']['application_year']"
                                                },
                                                {
                                                    "argument_name": "current_employer_start_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The start date of the current employer in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['borrowers'][0]['URLA']['current_employer'][0]['start_date']['value']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_employment_start_year_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the employment start year equals (application_year - 2)."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "handle_date_validation_failure",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Evaluate the boolean outputs from previous validations: is_application_date_valid, is_employment_start_date_within_range, and is_employment_start_year_valid. If any of these validations return false then the overall condition fails and the process should skip to HTP_Validation_Set_9.",
                                        "inputs": [
                                            "'is_application_date_valid': Boolean from validate_application_date_range",
                                            "'is_employment_start_date_within_range': Boolean from validate_employment_start_date (subtask 1.a)",
                                            "'is_employment_start_year_valid': Boolean from validate_employment_start_date (subtask 1.b)"
                                        ],
                                        "formulas": [
                                            "if (NOT is_application_date_valid OR NOT is_employment_start_date_within_range OR NOT is_employment_start_year_valid) then trigger skip condition"
                                        ],
                                        "outputs": [
                                            "'skip_decision': Logical flag indicating if the process should skip to the alternate HTP"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": "HTP_Validation_Set_9",
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "evaluate_date_validation_failure",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Boolean from validate_application_date_range indicating if the application date is valid.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_8']['validate_application_date_range']['1.a']['is_application_date_valid']"
                                                },
                                                {
                                                    "argument_name": "is_employment_start_date_within_range",
                                                    "data_type": "Boolean",
                                                    "description": "Boolean from validate_employment_start_date (subtask 1.a) indicating if the employment start date is within range.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_8']['validate_employment_start_date']['1.a']['is_employment_start_date_within_range']"
                                                },
                                                {
                                                    "argument_name": "is_employment_start_year_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Boolean from validate_employment_start_date (subtask 1.b) indicating if the employment start year is valid.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_8']['validate_employment_start_date']['1.b']['is_employment_start_year_valid']"
                                                }
                                            ],
                                            "return_type": "Tuple[Boolean, Boolean]",
                                            "return_description": [
                                                {
                                                    "field_name": "skip_decision",
                                                    "data_type": "Boolean",
                                                    "description": "Logical flag indicating if the process should skip to the alternate HTP."
                                                },
                                                {
                                                    "field_name": "skip_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the HTP should be skipped to HTP_Validation_Set_9."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "validate_document_set_existence",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Check for the existence of the required document sets for the years (application_year - 1) and (application_year - 2). The required documents are:\n \u2022 Tax Form 1040 for (application_year - 1)\n \u2022 Tax Form 1040 for (application_year - 2)\n \u2022 Tax Form 1120S for (application_year - 1)\n \u2022 Tax Form 1120S for (application_year - 2)\n \u2022 Tax Form 1120SSCHK1 for (application_year - 1)\n \u2022 Tax Form 1120SSCHK1 for (application_year - 2)\nFor each document type, traverse the input as follows: For Tax Form 1040, navigate to 'Tax Form 1040' (an array) and check if any object has its 'tax_year' (access via tax_year -> value) equal to (application_year - 1) or (application_year - 2). Similarly, for documents under other_doc_types (Tax Form 1120S and Tax Form 1120SSCHK1), check their respective arrays and their 'tax_year' fields.",
                                        "inputs": [
                                            "'application_year': value from output of extract_application_year",
                                            "'Tax Form 1040': input_data -> Tax Form 1040 (array) -> objects -> tax_year -> value",
                                            "'Tax Form 1120S': input_data -> other_doc_types -> Tax Form 1120S (array) -> objects -> tax_year -> value",
                                            "'Tax Form 1120SSCHK1': input_data -> other_doc_types -> Tax Form 1120SSCHK1 (array) -> objects -> tax_year -> value"
                                        ],
                                        "formulas": [
                                            "required_year_1 = application_year - 1",
                                            "required_year_2 = application_year - 2",
                                            "For each document type, verify that there is at least one document with tax_year equal to required_year_1 and one with required_year_2",
                                            "is_document_set_present = true if all required documents are found, else false"
                                        ],
                                        "outputs": [
                                            "'is_document_set_present': Boolean indicating whether all required documents exist"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "check_document_set_existence",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the application_date.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1040",
                                                    "data_type": "List[dict]",
                                                    "description": "Array of Tax Form 1040 documents with tax_year field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1040.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['borrowers'][0]['Tax Form 1040']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120s",
                                                    "data_type": "List[dict]",
                                                    "description": "Array of Tax Form 1120S documents with tax_year field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120S.taxForm1120STaxYear String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120sschk1",
                                                    "data_type": "List[dict]",
                                                    "description": "Array of Tax Form 1120SSCHK1 documents with tax_year field.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120SSCHK1.taxForm1120SSCHK1TaxYear String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_document_set_present",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether all required documents exist for the specified years."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "handle_document_set_existence",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "If the required document set is present (i.e., is_document_set_present is True), then terminate the process. This indicates that the necessary documentation exists and no further action is required.",
                                        "inputs": [
                                            "'is_document_set_present': Boolean from validate_document_set_existence"
                                        ],
                                        "formulas": [
                                            "if is_document_set_present == True then set process_status to terminated due to complete document set"
                                        ],
                                        "outputs": [
                                            "'process_status': Status message indicating termination because the document set is present"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "terminate_if_document_set_present",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_document_set_present",
                                                    "data_type": "Boolean",
                                                    "description": "Boolean from validate_document_set_existence indicating if the document set is present.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_8']['validate_document_set_existence']['1.a']['is_document_set_present']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "process_status",
                                                    "data_type": "String",
                                                    "description": "Status message indicating termination because the document set is present."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the process should be terminated."
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "subtask_id": "1.b",
                                        "description": "If the required document set is missing (i.e., is_document_set_present is False), then stop the process and return the discrepancy message: 'Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.'",
                                        "inputs": [
                                            "'is_document_set_present': Boolean from validate_document_set_existence"
                                        ],
                                        "formulas": [
                                            "if is_document_set_present == False then return the defined discrepancy message"
                                        ],
                                        "outputs": [
                                            "'discrepancy_msg': The discrepancy message to be returned"
                                        ],
                                        "discrepancy_string": "Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.",
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "return_discrepancy_if_document_set_missing",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_document_set_present",
                                                    "data_type": "Boolean",
                                                    "description": "Boolean from validate_document_set_existence indicating if the document set is present.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_8']['validate_document_set_existence']['1.a']['is_document_set_present']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "discrepancy_message",
                                                    "data_type": "String",
                                                    "description": "The discrepancy message to be returned if the document set is missing."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether the process should be terminated."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "name": "htp_validation_set_9",
                        "expert_instructions": "9a. Extract the Application Year (YYYY) from the Application Date.\n9b. Validate that Application Date is between 01/01/YYYY (inclusive) and 12/31/YYYY (inclusive).\n9c. Validate that Employment Start Date \u2265 (Application Date \u2212 2 years).\n9d. Validate that the Employment Start Date year equals (YYYY - 1).\n9e. If any condition in 9b, 9c, or 9d is not satisfied, Terminate process. (No further set exists.)\n9f. Check for the existence of the following document set:\n\u2022 Tax Form 1040 for (YYYY-1)\n\u2022 Tax Form 1120S for (YYYY-1)\n\u2022 Tax Form 1120SSCHK1 for (YYYY-1)\n9g. If the document set is present, Terminate process.\n9h. If the document set is missing,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent year. As the business started less than 2 years ago as reflected on Form 1003.\"",
                        "discrepancy_messages": "",
                        "tasks": [
                            {
                                "task_name": "extract_application_year",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Extract the four-digit year (YYYY) from the Application Date. This involves reading the 'application_date' field from the input data, accessing its 'value', and parsing out the year portion. The expected output is a string representing the year in YYYY format.",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value"
                                        ],
                                        "formulas": [],
                                        "outputs": [
                                            "'application_year': The extracted application year in YYYY format (string)"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "extract_application_year_from_date",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String",
                                                    "description": "Date in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                }
                                            ],
                                            "return_type": "String",
                                            "return_description": [
                                                {
                                                    "field_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the application_date."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "validate_application_date_range",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Validate that the Application Date is within the range defined by 01/01/YYYY and 12/31/YYYY (inclusive), where YYYY is the extracted application year. First, construct the lower bound date as '01/01/' concatenated with the application_year and the upper bound as '12/31/' concatenated with the application_year. Then, convert the application_date to a comparable date format and check if it is greater than or equal to the lower bound and less than or equal to the upper bound.",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value",
                                            "'application_year': output from extract_application_year -> application_year"
                                        ],
                                        "formulas": [
                                            "lower_bound = '01/01/' + application_year",
                                            "upper_bound = '12/31/' + application_year",
                                            "is_valid = (application_date >= lower_bound) AND (application_date <= upper_bound)"
                                        ],
                                        "outputs": [
                                            "'is_application_date_valid': A Boolean value indicating if the Application Date is within the defined range"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_application_date_within_range",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The application date to be validated. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the application_date. Output from subtask 'extract_application_year'.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_9']['extract_application_year']['1.a']['application_year']"
                                                }
                                            ],
                                            "function_description": "Validates if the application_date is within the range defined by 01/01/YYYY and 12/31/YYYY, where YYYY is the application_year.",
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates if the application_date is within the defined range."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "validate_employment_start_date",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Validate that the Employment Start Date is greater than or equal to (Application Date \u2212 2 years). This involves extracting the Employment Start Date from the current employer data by navigating to 'borrowers' (list) -> first borrower -> 'URLA' -> 'current_employer' (list) -> first employer -> 'start_date' -> value. Then, convert the Application Date to a date, subtract 2 years (or 730 days for approximation), and compare the Employment Start Date with the computed lower bound.",
                                        "inputs": [
                                            "'application_date': input_data -> application_date -> value",
                                            "'current_employer_start_date': input_data -> borrowers -> first borrower -> URLA -> current_employer -> first employer -> start_date -> value"
                                        ],
                                        "formulas": [
                                            "min_valid_date = (application_date - 2 years)  // using proper date arithmetic or subtracting 730 days",
                                            "is_valid = current_employer_start_date >= min_valid_date"
                                        ],
                                        "outputs": [
                                            "'is_employment_date_valid': A Boolean flag indicating if the Employment Start Date is valid relative to (Application Date - 2 years)"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_employment_start_date",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The date of the application in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['application_date']['value']"
                                                },
                                                {
                                                    "argument_name": "current_employer_start_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The start date of the current employer in format: MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['borrowers'][0]['URLA']['current_employer'][0]['start_date']['value']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_employment_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean flag indicating if the Employment Start Date is valid relative to (Application Date - 2 years)"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "validate_employment_start_year",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Validate that the year part of the Employment Start Date equals (Application Year - 1). Extract the Employment Start Date's year from the current employer field and compute the expected year by subtracting 1 from the Application Year. Then compare the two values.",
                                        "inputs": [
                                            "'application_year': output from extract_application_year -> application_year",
                                            "'current_employer_start_date': input_data -> borrowers -> first borrower -> URLA -> current_employer -> first employer -> start_date -> value"
                                        ],
                                        "formulas": [
                                            "expected_year = int(application_year) - 1",
                                            "actual_year = extract year from current_employer_start_date",
                                            "is_valid = (actual_year == expected_year)"
                                        ],
                                        "outputs": [
                                            "'is_employment_year_valid': A Boolean flag indicating if the Employment Start Date year is equal to (Application Year - 1)"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "validate_employment_start_year",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the application_date. Output from task 'extract_application_year'.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_9']['extract_application_year']['1.a']['application_year']"
                                                },
                                                {
                                                    "argument_name": "current_employer_start_date",
                                                    "data_type": "String (Date)",
                                                    "description": "The start date of the current employer for the first borrower. Valid formats are MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY.",
                                                    "argument_schema": null,
                                                    "data_access_str": "input_data['borrowers'][0]['URLA']['current_employer'][0]['start_date']['value']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_employment_year_valid",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean flag indicating if the Employment Start Date year is equal to (Application Year - 1)."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "terminate_if_validations_fail",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Aggregate the results from the validations of the Application Date range, the Employment Start Date relative to (Application Date - 2 years), and the Employment Start Date year equality. If any of these validations (is_application_date_valid, is_employment_date_valid, is_employment_year_valid) is false, the process must be terminated immediately. The output should be a Boolean flag that is true only if all conditions are met; otherwise, the process is terminated.",
                                        "inputs": [
                                            "'is_application_date_valid': output from validate_application_date_range -> is_application_date_valid",
                                            "'is_employment_date_valid': output from validate_employment_start_date -> is_employment_date_valid",
                                            "'is_employment_year_valid': output from validate_employment_start_year -> is_employment_year_valid"
                                        ],
                                        "formulas": [
                                            "are_all_validations_passed = is_application_date_valid AND is_employment_date_valid AND is_employment_year_valid"
                                        ],
                                        "outputs": [
                                            "'are_all_validations_passed': A Boolean value representing the aggregation of all validations"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": true,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "aggregate_validation_results",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_application_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates if the application_date is within the defined range. Output from validate_application_date_range.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_9']['validate_application_date_range']['1.a']['is_application_date_valid']"
                                                },
                                                {
                                                    "argument_name": "is_employment_date_valid",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean flag indicating if the Employment Start Date is valid relative to (Application Date - 2 years). Output from validate_employment_start_date.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_9']['validate_employment_start_date']['1.a']['is_employment_date_valid']"
                                                },
                                                {
                                                    "argument_name": "is_employment_year_valid",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean flag indicating if the Employment Start Date year is equal to (Application Year - 1). Output from validate_employment_start_year.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_9']['validate_employment_start_year']['1.a']['is_employment_year_valid']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "are_all_validations_passed",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean value representing the aggregation of all validations."
                                                },
                                                {
                                                    "field_name": "terminate_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to terminate the HTP."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to terminate the process."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "check_document_set_existence",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Check for the existence of the required document set for tax year (Application Year - 1). The required documents are: Tax Form 1040, Tax Form 1120S, and Tax Form 1120SSCHK1. For each document type, traverse the input data as follows: For Tax Form 1040, navigate to 'Tax Form 1040' (list) at the root level; for Tax Form 1120S and Tax Form 1120SSCHK1, navigate to the respective arrays under 'other_doc_types'. In each document set, verify if at least one document has a 'tax_year' field whose value matches (Application Year - 1).",
                                        "inputs": [
                                            "'application_year': output from extract_application_year -> application_year",
                                            "'tax_form_1040': input_data -> Tax Form 1040 (list)",
                                            "'tax_form_1120S': input_data -> other_doc_types -> Tax Form 1120S (list)",
                                            "'tax_form_1120SSCHK1': input_data -> other_doc_types -> Tax Form 1120SSCHK1 (list)"
                                        ],
                                        "formulas": [
                                            "expected_tax_year = int(application_year) - 1",
                                            "check_1040 = exists(item in tax_form_1040 where item.tax_year.value == expected_tax_year)",
                                            "check_1120S = exists(item in tax_form_1120S where item.tax_year.value == expected_tax_year)",
                                            "check_1120SSCHK1 = exists(item in tax_form_1120SSCHK1 where item.tax_year.value == expected_tax_year)",
                                            "is_document_set_complete = check_1040 AND check_1120S AND check_1120SSCHK1"
                                        ],
                                        "outputs": [
                                            "'is_document_set_complete': A Boolean value that is true if all required documents for the tax year (Application Year - 1) are present"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": false,
                                        "terminate_process": false,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "check_document_set_existence_for_tax_year",
                                            "arguments": [
                                                {
                                                    "argument_name": "application_year",
                                                    "data_type": "String",
                                                    "description": "The 4-digit year extracted from the application_date. Output from task 'extract_application_year'.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_9']['extract_application_year']['1.a']['application_year']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1040",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1040 documents at the root level of input data.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1040.Tax Return Year String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['borrowers'][0]['Tax Form 1040']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120s",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120S documents under 'other_doc_types'.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120.taxForm1120TaxYear String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120']"
                                                },
                                                {
                                                    "argument_name": "tax_form_1120sschk1",
                                                    "data_type": "List[dict]",
                                                    "description": "List of Tax Form 1120SSCHK1 documents under 'other_doc_types'.",
                                                    "argument_schema": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tax_year": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Tax Form 1120SCHG.taxForm1120SCHGTaxYear String (Year)"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "data_access_str": "input_data['other_doc_types']['Tax Form 1120SCHG']"
                                                }
                                            ],
                                            "return_type": "Boolean",
                                            "return_description": [
                                                {
                                                    "field_name": "is_document_set_complete",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean value that is true if all required documents for the tax year (Application Year - 1) are present."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "terminate_if_document_set_present",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "Based on the result from the document set check, if the complete document set (Tax Form 1040, Tax Form 1120S, and Tax Form 1120SSCHK1 for tax year (Application Year - 1)) is present, then terminate the process immediately. This subtask evaluates the flag and, if true, will lead to process termination.",
                                        "inputs": [
                                            "'is_document_set_complete': output from check_document_set_existence -> is_document_set_complete"
                                        ],
                                        "formulas": [
                                            "if is_document_set_complete is true, then set document_set_present = true"
                                        ],
                                        "outputs": [
                                            "'document_set_present': A Boolean value indicating that the required document set is present"
                                        ],
                                        "discrepancy_string": null,
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": true,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "check_and_terminate_if_document_set_present",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_document_set_complete",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean value that is true if all required documents for the tax year (Application Year - 1) are present. Output from subtask 'check_document_set_existence'.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_9']['check_document_set_existence']['1.a']['is_document_set_complete']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "document_set_present",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean value indicating that the required document set is present."
                                                },
                                                {
                                                    "field_name": "terminate_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to terminate the HTP."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to terminate the process."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "task_name": "stop_process_due_to_missing_document_set",
                                "subtasks": [
                                    {
                                        "subtask_id": "1.a",
                                        "description": "If the required document set is missing (i.e., is_document_set_complete is false), then stop the process and return the discrepancy message. The message to be returned is: 'Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent year. As the business started less than 2 years ago as reflected on Form 1003.'",
                                        "inputs": [
                                            "'is_document_set_complete': output from check_document_set_existence -> is_document_set_complete"
                                        ],
                                        "formulas": [
                                            "if is_document_set_complete is false, then set discrepancy_msg to the specified message"
                                        ],
                                        "outputs": [
                                            "'discrepancy_msg': The discrepancy message indicating missing Tax Returns"
                                        ],
                                        "discrepancy_string": "Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120S) are missing for the most recent year. As the business started less than 2 years ago as reflected on Form 1003.",
                                        "skip_to_task": null,
                                        "skip_to_htp": null,
                                        "terminate_htp": true,
                                        "terminate_process": true,
                                        "execute_and_return_output_schema": null,
                                        "execute_and_return": null,
                                        "function_details": {
                                            "function_name": "stop_process_due_to_missing_document_set",
                                            "function_description": "Stops the process if the required document set is missing and returns a discrepancy message.",
                                            "arguments": [
                                                {
                                                    "argument_name": "is_document_set_complete",
                                                    "data_type": "Boolean",
                                                    "description": "A Boolean value indicating if the document set is complete. Output from check_document_set_existence.",
                                                    "argument_schema": null,
                                                    "data_access_str": "output_data['rule_documentation_presence_for_1120s_business']['htp_validation_set_9']['check_document_set_existence']['1.a']['is_document_set_complete']"
                                                }
                                            ],
                                            "return_type": "Tuple",
                                            "return_description": [
                                                {
                                                    "field_name": "discrepancy_message",
                                                    "data_type": "String",
                                                    "description": "The discrepancy message indicating missing Tax Returns."
                                                },
                                                {
                                                    "field_name": "terminate_htp",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to terminate the HTP."
                                                },
                                                {
                                                    "field_name": "terminate_process",
                                                    "data_type": "Boolean",
                                                    "description": "Indicates whether to terminate the process."
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "run_id": "e2da5296-b377-4d15-be39-66a2fbf44bfe"
    },
    {
        "name": "rule_documentation_presence_for_borrowers_1120_business",
        "question": "Is documentation present for borrowers 1120 business",
        "steps": [
            {
                "name": "step_check_documentation_presence",
                "fields": "1120 Business Income",
                "split_cell": true,
                "expert_instructions": "For all the dates, format is (date format MM/DD/YYYY, MM-DD-YYYY, or MM.DD.YYYY)\n\n1. From Application date extract application year and save it as YYYY,\n\u2666 Check if 01/01/YYYY\u2264 Application Date < 04/14/YYYY ; and \u25d8\"1b Start Date(From URLA)\" \u2264 Application Date \u22125 years ;if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 From list of Tax Form 1040 check for (YYYY-1) and Tax Form 1040 for (YYYY-2); and\nFrom list of Tax Form 1120 check for (YYYY-1) and Tax Form 1120 for (YYYY-2); and\nFrom list of Tax Form 1125E check for (YYYY-1) and Tax Form 1125E for (YYYY-2) or Tax Form 1120SCHG for (YYYY-1) and Tax Form 1120SCHG for (YYYY-2); or\n\u2666 From list of Tax Form 1040 check for (YYYY-2) and Tax Form 1040 for (YYYY-3); and\nfrom list of Tax Form 1120 check for (YYYY-2) and Tax Form 1120 for (YYYY-3); and\nFrom list of Tax Form 1125E  check for (YYYY-2) and Tax Form 1125E  for (YYYY-3) or Tax Form 1120SCHG for (YYYY-2) and Tax Form 1120SCHG for (YYYY-3); or\n\u2666 From list of Tax Form 1040 check for (YYYY-1) and\nFrom list of Tax Form 1120 check for (YYYY-1) and\nFrom list of Tax Form 1125E check for (YYYY-1) or Tax Form 1120SCHG for (YYYY-1); or\n\u2666 FRom list of Tax Form 1040 check for (YYYY-2) and\nFrom list of Tax Form 1120 check for (YYYY-2) and\nFrom list of Tax Form 1125E  check for (YYYY-2) or Tax Form 1120SCHG for (YYYY-2).\nIf any of the above set is present terminate the process else return the appropriate discrepancy message.\n\n2. From Application date extract application year and save it as YYYY  \n\u2666 Check if 04/15/YYYY\u2264 Application Date < 10/14/YYYY ; and \u25d8 \"1b Start Date(From URLA)\" \u2264 Application Date \u22125 years ; if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 From list of Tax Form 1040 check for (YYYY-1) and Tax Form 1040 for (YYYY-2) and\nFrom list of Tax Form 1120 check for (YYYY-1) and Tax Form 1120 for (YYYY-2) and\nFrom list of Tax Form 1125E  check for (YYYY-1) and Tax Form 1125E  for (YYYY-2) or Tax Form 1120SCHG for (YYYY-1) and Tax Form 1120SCHGfor (YYYY-2) ; or\n\u2666 From list of Tax Form 1040 check for (YYYY-2) and Tax Form 1040 for (YYYY-3) and\nFrom list of Form 4868 check for (YYYY-1) and\nFRom list of Tax Form 1120 check for (YYYY-2) and Tax Form 1120 for (YYYY-3) and\nFrom list of Tax Form 1125E check for (YYYY-2) and Tax Form 1125E for (YYYY-3) or Tax Form 1120SCHG for (YYYY-2) and Tax Form 1120SCHG for (YYYY-3) and\nFrom list of Form 7004 check for (YYYY-1); or\n\u2666 From list of Tax Form 1040 check for (YYYY-1) and\nFrom list of Tax Form 1120 for (YYYY-1) and\nFrom list of Tax Form 1125E check for (YYYY-1) or Tax Form 1120SCHG for (YYYY-1); or\n\u2666 From list of Tax Form 1040 check for (YYYY-2) and\nFrom list of Form 4868 check for (YYYY-1) and\nFrom list of Tax Form 1120 check for (YYYY-2) and\nFrom list of Tax Form 1125E check for (YYYY-2) or  Tax Form 1120SCHG for (YYYY-2) and\nFrom list of Form 7004 for (YYYY-1).\nIf any of the above set is present terminate the process else return the appropriate discrepancy message.\n\n3.  From Application date extract application year and save it as YYYY \n\u2666 Check if 10/15/YYYY\u2264 Application Date \u2264 12/31/YYYY ; and \u25d8 \"1b Start Date(From URLA)\" \u2264 Application Date \u22125 years ;if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 FRom list of Tax Form 1040 check for (YYYY-1) and Tax Form 1040 for (YYYY-2) and\nFRom list of Tax Form 1120 for (YYYY-1) and Tax Form 1120 for (YYYY-2) and\nFrom list of Tax Form 1125E  for (YYYY-1) and Tax Form 1125E  for (YYYY-2) or Tax Form 1120SCHG for (YYYY-1) and Tax Form 1120SCHG for (YYYY-2); or\n\u2666 From list of Tax Form 1040 for (YYYY-1) and\nFrom list of Tax Form 1120 for (YYYY-1) and\nFrom list of Tax Form 1125E for (YYYY-1) or Tax Form 1120SCHG for (YYYY-1) .\nIf any of the above set is present terminate the process else return the appropriate discrepancy message.\n\n4.   From Application date extract application year and save it as YYYY \n\u2666 Check if 01/01/YYYY\u2264 Application Date < 04/14/YYYY ; and \u25d8 (Application Date \u22125 years) < Employment Start Date \u2264 (Application Date \u22122 years); if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 From list of Tax Form 1040 check for (YYYY-1) and Tax Form 1040 for (YYYY-2) and\nFrom list of Tax Form 1120 for (YYYY-1) and Tax Form 1120 for (YYYY-2) and\nFrom list of Tax Form 1125E for (YYYY-1) and Tax Form 1125E for (YYYY-2) or Tax Form 1120SCHG for (YYYY-1) and Tax Form 1120SCHG for (YYYY-2) ;or\n\u2666 From list of Tax Form 1040 for (YYYY-2) and Tax Form 1040 for (YYYY-3) and\nFrom list of Tax Form 1120 for (YYYY-2) and Tax Form 1120 for (YYYY-3) and\nFrom list of Tax Form 1125E for (YYYY-2) and Tax Form 1125E for (YYYY-3) or Tax Form 1120SCHG for (YYYY-2) and Tax Form 1120SCHG for (YYYY-3) \nIf any of the above set is present terminate the process else return the appropriate discrepancy message.\n\n5.  From Application date extract application year and save it as YYYY \n\u2666 Check if 04/15/YYYY\u2264 Application Date < 10/14/YYYY ; and \u25d8 (Application Date \u22125 years) < Employment Start Date \u2264 (Application Date \u22122 years); if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 From list of Tax Form 1040 check for (YYYY-1) and Tax Form 1040 for (YYYY-2) and\nFrom list of Tax Form 1120 check for (YYYY-1) and Tax Form 1120 for (YYYY-2) and\nFRom list of Tax Form 1125E for (YYYY-1) and Tax Form 1125E for (YYYY-2) or Tax Form 1120SCHG for (YYYY-1) and Tax Form 1120SCHG for (YYYY-2) ; or\n\u2666 From list of Tax Form 1040 for (YYYY-2) and Tax Form 1040 for (YYYY-3) and\nForm 4868 for (YYYY-1) and\nTax Form 1120 for (YYYY-2) and Tax Form 1120 for (YYYY-3) and\nTax Form 1125E for (YYYY-2) and Tax Form 1125E for (YYYY-3) or Tax Form 1120SCHG for (YYYY-2) and Tax Form 1120SCHG for (YYYY-3) and\nForm 7004 for (YYYY-1).\nIf any of the above set is present terminate the process else return the appropriate discrepancy message.\n\n6.  From Application date extract application year and save it as YYYY \n\u2666 Check if 10/15/YYYY\u2264 Application Date \u2264 12/31/YYYY ; and  \u25d8 (Application Date \u22125 years) < Employment Start Date \u2264 (Application Date \u22122 years); if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 From list of Tax Form 1040 check for (YYYY-1) and Tax Form 1040 for (YYYY-2) and\nFrom list of Tax Form 1120 for (YYYY-1) and Tax Form 1120 for (YYYY-2) and\nTax Form 1125E for (YYYY-1) and Tax Form 1125E for (YYYY-2) or Tax Form 1120SCHG for (YYYY-1) and Tax Form 1120SCHG for (YYYY-2).\nIf any of the above set is present terminate the process else return the appropriate discrepancy message.\n\n\n7. From Application date extract application year and save it as YYYY \n\u2666 Check if 01/01/YYYY\u2264 Application Date < 04/14/YYYY ; and \u25d8 Employment Start Date \u2265 (Application Date \u22122 years) ; and \u25d8 Employment Start Date YYYY is YYYY-2 ; if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 From list of Tax Form 1040 check for the year (YYYY-1) and Tax Form 1040 for the year (YYYY-2); and\nTax Form 1120 for the year (YYYY-1) and Tax Form 1120  for the year (YYYY-2); and\nTax Form 1125E for the year (YYYY-1) and Tax Form 1125E for the year (YYYY-2) or Tax Form 1120SCHG for the year (YYYY-1) and Tax Form 1120SCHG for the year (YYYY-2) ;  \nIf any of the above set is present terminate the process else return the appropriate discrepancy message.\n\n8. From Application date extract application year and save it as YYYY \n\u2666 Check if 01/01/YYYY\u2264 Application Date < 12/31/YYYY ; and \u25d8 Employment Start Date \u2265 (Application Date \u22122 years) ; and \u25d8 Employment Start Date YYYY is YYYY-2 ; if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 From list of Tax Form 1040 check for the year (YYYY-1) and Tax Form 1040 for the year (YYYY-2); and\nTax Form 1120 for the year (YYYY-1) and Tax Form 1120  for the year (YYYY-2); and\nTax Form 1125E for the year (YYYY-1) and Tax Form 1125E for the year (YYYY-2) or Tax Form 1120SCHG for the year (YYYY-1) and Tax Form 1120SCHG for the year (YYYY-2)\nIf any of the above set is present terminate the process else return the appropriate discrepancy message.\n\n9.  From Application date extract application year and save it as YYYY \n\u2666 Check if 01/01/YYYY\u2264 Application Date \u2264 12/31/YYYY ; and \u25d8 Employment Start Date \u2265 (Application Date \u22122 years) ; and \u25d8 Employment Start Date YYYY is YYYY-1 ;if these condtions are satisfied then check if the following documents exist;  If these condition fails, skip to next set of instructions.\n\u2666 From list of Tax Form 1040 for the year (YYYY-1) and\nTax Form 1120 for the year (YYYY-1) ;and\nTax Form 1125E for the year (YYYY-1) or Tax Form 1120SCHG for the year (YYYY-1)\nIf any of the above set is present terminate the process else return the appropriate discrepancy message.",
                "discrepancy_messages": "1. Borrower's personal Tax Returns (1040's) and / or Business Tax Returns (1120) are missing for the most recent year. As the business is in existence for five years as reflected on the Form 1003.\n\n2. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent year. Form 4868 and/or Form 7004 is missing, which is required if tax returns are unavailable. As the business has been in existence for more than five years as reflected on Form 1003.\n\n3. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent year. Form 4868 is not acceptable as the application date is after October 15. As the business has been in existence for more than five years as reflected on Form 1003.\n\n4. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.\n\n5. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent two years. Form 4868 and/or Form 7004 is missing, which is required if tax returns for the most recent year are unavailable. As the business has been in existence for less than five years as reflected on Form 1003.\n\n6. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent two years. Form 4868 is not acceptable as the application date is after October 15th. As the business has been in existence for less than five years,as reflected on Form 1003. \n\n7. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.\n\n8. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.\n\n9. Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent year. As the business started less than 2 years ago as reflected on Form 1003.",
                "doc_type_keys": [
                    "borrowers[].URLA",
                    "borrowers[].Tax Form 1040",
                    "other_doc_types.Tax Form 1120",
                    "other_doc_types.Tax Form 1125E",
                    "other_doc_types.Tax Form 1120SCHG",
                    "borrowers[].Tax Form 4868",
                    "other_doc_types.Tax Form 7004"
                ],
                "htps": [
                    {
                        "name": "htp_cond1_taxdocs",
                        "expert_instructions": "1a. Extract the application year (YYYY) from Application Date.  \n1b. Validate that Application Date satisfies: 01/01/YYYY \u2264 Application Date < 04/14/YYYY.  \n1c. Validate that \u201c1b Start Date (From URLA)\u201d \u2264 (Application Date \u2212 5 years).  \n1d. If either condition in 1b or 1c fails, Skip to HTP_Cond2_TaxDocs.  \n1e. If conditions pass, evaluate document sets:  \n\u2003\u2003Option A:  \n\u2003\u2003\u2003a. Check if Tax Form 1040 exists for year (YYYY\u22121) AND Tax Form 1040 exists for year (YYYY\u22122).  \n\u2003\u2003\u2003b. Check if Tax Form 1120 exists for year (YYYY\u22121) AND Tax Form 1120 exists for year (YYYY\u22122).  \n\u2003\u2003\u2003c. Check if [Tax Form 1125E exists for year (YYYY\u22121) AND Tax Form 1125E exists for year (YYYY\u22122)] OR [Tax Form 1120SCHG exists for year (YYYY\u22121) AND Tax Form 1120SCHG exists for year (YYYY\u22122)].  \n\u2003\u2003\u2003d. If all conditions in Option A are met, Terminate process.  \n\u2003\u2003Option B:  \n\u2003\u2003\u2003a. Check if Tax Form 1040 exists for year (YYYY\u22122) AND Tax Form 1040 exists for year (YYYY\u22123).  \n\u2003\u2003\u2003b. Check if Tax Form 1120 exists for year (YYYY\u22122) AND Tax Form 1120 exists for year (YYYY\u22123).  \n\u2003\u2003\u2003c. Check if [Tax Form 1125E exists for year (YYYY\u22122) AND Tax Form 1125E exists for year (YYYY\u22123)] OR [Tax Form 1120SCHG exists for year (YYYY\u22122) AND Tax Form 1120SCHG exists for year (YYYY\u22123)].  \n\u2003\u2003\u2003d. If all conditions in Option B are met, Terminate process.  \n\u2003\u2003Option C:  \n\u2003\u2003\u2003a. Check if Tax Form 1040 exists for year (YYYY\u22121).  \n\u2003\u2003\u2003b. Check if Tax Form 1120 exists for year (YYYY\u22121).  \n\u2003\u2003\u2003c. Check if either Tax Form 1125E OR Tax Form 1120SCHG exists for year (YYYY\u22121).  \n\u2003\u2003\u2003d. If all conditions in Option C are met, Terminate process.  \n\u2003\u2003Option D:  \n\u2003\u2003\u2003a. Check if Tax Form 1040 exists for year (YYYY\u22122).  \n\u2003\u2003\u2003b. Check if Tax Form 1120 exists for year (YYYY\u22122).  \n\u2003\u2003\u2003c. Check if either Tax Form 1125E OR Tax Form 1120SCHG exists for year (YYYY\u22122).  \n\u2003\u2003\u2003d. If all conditions in Option D are met, Terminate process.  \n1f. If none of the document set options (A, B, C, or D) are present,  \n\u2003\u2003\"Stop the process and return discrepancy message.\"  \nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040's) and / or Business Tax Returns (1120) are missing for the most recent year. As the business is in existence for five years as reflected on the Form 1003.\"  ",
                        "discrepancy_messages": ""
                    },
                    {
                        "name": "htp_cond2_taxdocs",
                        "expert_instructions": "2a. Extract the application year (YYYY) from Application Date.\n2b. Validate that Application Date satisfies: 04/15/YYYY \u2264 Application Date < 10/14/YYYY.\n2c. Validate that \u201c1b Start Date (From URLA)\u201d \u2264 (Application Date \u2212 5 years).\n2d. If either condition in 2b or 2c fails, Skip to HTP_Cond3_TaxDocs.\n2e. If conditions pass, evaluate document sets:\nOption A:\na. Check if Tax Form 1040 exists for year (YYYY\u22121) AND Tax Form 1040 exists for year (YYYY\u22122).\nb. Check if Tax Form 1120 exists for year (YYYY\u22121) AND Tax Form 1120 exists for year (YYYY\u22122).\nc. Check if [Tax Form 1125E exists for year (YYYY\u22121) AND Tax Form 1125E exists for year (YYYY\u22122)] OR [Tax Form 1120SCHG exists for year (YYYY\u22121) AND Tax Form 1120SCHG exists for year (YYYY\u22122)].\nd. If Option A is met, Terminate process.\nOption B:\na. Check if Tax Form 1040 exists for year (YYYY\u22122) AND Tax Form 1040 exists for year (YYYY\u22123).\nb. Check if Form 4868 exists for year (YYYY\u22121).\nc. Check if Tax Form 1120 exists for year (YYYY\u22122) AND Tax Form 1120 exists for year (YYYY\u22123).\nd. Check if [Tax Form 1125E exists for year (YYYY\u22122) AND Tax Form 1125E exists for year (YYYY\u22123)] OR [Tax Form 1120SCHG exists for year (YYYY\u22122) AND Tax Form 1120SCHG exists for year (YYYY\u22123)].\ne. Check if Form 7004 exists for year (YYYY\u22121).\nf. If Option B is met, Terminate process.\nOption C:\na. Check if Tax Form 1040 exists for year (YYYY\u22121).\nb. Check if Tax Form 1120 exists for year (YYYY\u22121).\nc. Check if either Tax Form 1125E OR Tax Form 1120SCHG exists for year (YYYY\u22121).\nd. If Option C is met, Terminate process.\nOption D:\na. Check if Tax Form 1040 exists for year (YYYY\u22122).\nb. Check if Tax Form 1120 exists for year (YYYY\u22122).\nc. Check if either Tax Form 1125E OR Tax Form 1120SCHG exists for year (YYYY\u22122).\nd. If Option D is met, Terminate process.\n2f. If none of the document sets are satisfied,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent year. Form 4868 and/or Form 7004 is missing, which is required if tax returns are unavailable. As the business has been in existence for more than five years as reflected on Form 1003.\"",
                        "discrepancy_messages": ""
                    },
                    {
                        "name": "htp_cond3_taxdocs",
                        "expert_instructions": "3a. Extract the application year (YYYY) from Application Date.\n3b. Validate that Application Date satisfies: 10/15/YYYY \u2264 Application Date \u2264 12/31/YYYY.\n3c. Validate that \u201c1b Start Date (From URLA)\u201d \u2264 (Application Date \u2212 5 years).\n3d. If any condition in 3b or 3c fails, Skip to HTP_Cond4_TaxDocs.\n3e. If conditions pass, evaluate document sets:\nOption A:\na. Check if Tax Form 1040 exists for year (YYYY\u22121) AND Tax Form 1040 exists for year (YYYY\u22122).\nb. Check if Tax Form 1120 exists for year (YYYY\u22121) AND Tax Form 1120 exists for year (YYYY\u22122).\nc. Check if [Tax Form 1125E exists for year (YYYY\u22121) AND Tax Form 1125E exists for year (YYYY\u22122)] OR [Tax Form 1120SCHG exists for year (YYYY\u22121) AND Tax Form 1120SCHG exists for year (YYYY\u22122)].\nd. If Option A is met, Terminate process.\nOption B:\na. Check if Tax Form 1040 exists for year (YYYY\u22121).\nb. Check if Tax Form 1120 exists for year (YYYY\u22121).\nc. Check if either Tax Form 1125E OR Tax Form 1120SCHG exists for year (YYYY\u22121).\nd. If Option B is met, Terminate process.\n3f. If neither Option A nor Option B is satisfied,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent year. Form 4868 is not acceptable as the application date is after October 15. As the business has been in existence for more than five years as reflected on Form 1003.\"",
                        "discrepancy_messages": ""
                    },
                    {
                        "name": "htp_cond4_taxdocs",
                        "expert_instructions": "4a. Extract the application year (YYYY) from Application Date.\n4b. Validate that Application Date satisfies: 01/01/YYYY \u2264 Application Date < 04/14/YYYY.\n4c. Validate that Employment Start Date satisfies: (Application Date \u2212 5 years) < Employment Start Date \u2264 (Application Date \u2212 2 years).\n4d. If any condition in 4b or 4c fails, Skip to HTP_Cond5_TaxDocs.\n4e. If conditions pass, evaluate document sets:\nOption A:\na. Check if Tax Form 1040 exists for year (YYYY\u22121) AND Tax Form 1040 exists for year (YYYY\u22122).\nb. Check if Tax Form 1120 exists for year (YYYY\u22121) AND Tax Form 1120 exists for year (YYYY\u22122).\nc. Check if [Tax Form 1125E exists for year (YYYY\u22121) AND Tax Form 1125E exists for year (YYYY\u22122)] OR [Tax Form 1120SCHG exists for year (YYYY\u22121) AND Tax Form 1120SCHG exists for year (YYYY\u22122)].\nd. If Option A is met, Terminate process.\nOption B:\na. Check if Tax Form 1040 exists for year (YYYY\u22122) AND Tax Form 1040 exists for year (YYYY\u22123).\nb. Check if Tax Form 1120 exists for year (YYYY\u22122) AND Tax Form 1120 exists for year (YYYY\u22123).\nc. Check if [Tax Form 1125E exists for year (YYYY\u22122) AND Tax Form 1125E exists for year (YYYY\u22123)] OR [Tax Form 1120SCHG exists for year (YYYY\u22122) AND Tax Form 1120SCHG exists for year (YYYY\u22123)].\nd. If Option B is met, Terminate process.\n4f. If neither option is met,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent two years. As the business is in existence for less than five years as reflected on Form 1003.\"",
                        "discrepancy_messages": ""
                    },
                    {
                        "name": "htp_cond5_taxdocs",
                        "expert_instructions": "5a. Extract the application year (YYYY) from Application Date.\n5b. Validate that Application Date satisfies: 04/15/YYYY \u2264 Application Date < 10/14/YYYY.\n5c. Validate that Employment Start Date satisfies: (Application Date \u2212 5 years) < Employment Start Date \u2264 (Application Date \u2212 2 years).\n5d. If either condition in 5b or 5c fails, Skip to HTP_Cond6_TaxDocs.\n5e. If conditions pass, evaluate document sets:\nOption A:\na. Check if Tax Form 1040 exists for year (YYYY\u22121) AND Tax Form 1040 exists for year (YYYY\u22122).\nb. Check if Tax Form 1120 exists for year (YYYY\u22121) AND Tax Form 1120 exists for year (YYYY\u22122).\nc. Check if [Tax Form 1125E exists for year (YYYY\u22121) AND Tax Form 1125E exists for year (YYYY\u22122)] OR [Tax Form 1120SCHG exists for year (YYYY\u22121) AND Tax Form 1120SCHG exists for year (YYYY\u22122)].\nd. If Option A is met, Terminate process.\nOption B:\na. Check if Tax Form 1040 exists for year (YYYY\u22122) AND Tax Form 1040 exists for year (YYYY\u22123).\nb. Check if Form 4868 exists for year (YYYY\u22121).\nc. Check if Tax Form 1120 exists for year (YYYY\u22122) AND Tax Form 1120 exists for year (YYYY\u22123).\nd. Check if [Tax Form 1125E exists for year (YYYY\u22122) AND Tax Form 1125E exists for year (YYYY\u22123)] OR [Tax Form 1120SCHG exists for year (YYYY\u22122) AND Tax Form 1120SCHG exists for year (YYYY\u22123)].\ne. Check if Form 7004 exists for year (YYYY\u22121).\nf. If Option B is met, Terminate process.\n5f. If neither option is met,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent two years. Form 4868 and/or Form 7004 is missing, which is required if tax returns for the most recent year are unavailable. As the business has been in existence for less than five years as reflected on Form 1003.\"",
                        "discrepancy_messages": ""
                    },
                    {
                        "name": "htp_cond6_taxdocs",
                        "expert_instructions": "6a. Extract the application year (YYYY) from Application Date.\n6b. Validate that Application Date satisfies: 10/15/YYYY \u2264 Application Date \u2264 12/31/YYYY.\n6c. Validate that Employment Start Date satisfies: (Application Date \u2212 5 years) < Employment Start Date \u2264 (Application Date \u2212 2 years).\n6d. If either condition in 6b or 6c fails, Skip to HTP_Cond7_TaxDocs.\n6e. If conditions pass, check if:\na. Tax Form 1040 exists for year (YYYY\u22121) AND Tax Form 1040 exists for year (YYYY\u22122).\nb. Tax Form 1120 exists for year (YYYY\u22121) AND Tax Form 1120 exists for year (YYYY\u22122).\nc. [Tax Form 1125E exists for year (YYYY\u22121) AND Tax Form 1125E exists for year (YYYY\u22122)] OR [Tax Form 1120SCHG exists for year (YYYY\u22121) AND Tax Form 1120SCHG exists for year (YYYY\u22122)].\n6f. If the above conditions are met, Terminate process; else,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent two years. Form 4868 is not acceptable as the application date is after October 15th. As the business has been in existence for less than five years, as reflected on Form 1003.\"",
                        "discrepancy_messages": ""
                    },
                    {
                        "name": "htp_cond7_taxdocs",
                        "expert_instructions": "7a. Extract the application year (YYYY) from Application Date.\n7b. Validate that Application Date satisfies: 01/01/YYYY \u2264 Application Date < 04/14/YYYY.\n7c. Validate that Employment Start Date \u2265 (Application Date \u2212 2 years).\n7d. Validate that Employment Start Date\u2019s year equals (YYYY\u22122).\n7e. If any condition in 7b\u20137d fails, Skip to HTP_Cond8_TaxDocs.\n7f. If conditions pass, check:\na. Tax Form 1040 exists for year (YYYY\u22121) AND Tax Form 1040 exists for year (YYYY\u22122).\nb. Tax Form 1120 exists for year (YYYY\u22121) AND Tax Form 1120 exists for year (YYYY\u22122).\nc. [Tax Form 1125E exists for year (YYYY\u22121) AND Tax Form 1125E exists for year (YYYY\u22122)] OR [Tax Form 1120SCHG exists for year (YYYY\u22121) AND Tax Form 1120SCHG exists for year (YYYY\u22122)].\n7g. If all conditions in 7f are met, Terminate process; else,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.\"",
                        "discrepancy_messages": ""
                    },
                    {
                        "name": "htp_cond8_taxdocs",
                        "expert_instructions": "8a. Extract the application year (YYYY) from Application Date.\n8b. Validate that Application Date satisfies: 01/01/YYYY \u2264 Application Date < 12/31/YYYY.\n8c. Validate that Employment Start Date \u2265 (Application Date \u2212 2 years).\n8d. Validate that Employment Start Date\u2019s year equals (YYYY\u22122).\n8e. If any condition in 8b\u20138d fails, Skip to HTP_Cond9_TaxDocs.\n8f. If conditions pass, check:\na. Tax Form 1040 exists for year (YYYY\u22121) AND Tax Form 1040 exists for year (YYYY\u22122).\nb. Tax Form 1120 exists for year (YYYY\u22121) AND Tax Form 1120 exists for year (YYYY\u22122).\nc. [Tax Form 1125E exists for year (YYYY\u22121) AND Tax Form 1125E exists for year (YYYY\u22122)] OR [Tax Form 1120SCHG exists for year (YYYY\u22121) AND Tax Form 1120SCHG exists for year (YYYY\u22122)].\n8g. If all conditions in 8f are met, Terminate process; else,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent two years. As the business has been in existence for less than five years as reflected on Form 1003.\"",
                        "discrepancy_messages": ""
                    },
                    {
                        "name": "htp_cond9_taxdocs",
                        "expert_instructions": "9a. Extract the application year (YYYY) from Application Date.\n9b. Validate that Application Date satisfies: 01/01/YYYY \u2264 Application Date \u2264 12/31/YYYY.\n9c. Validate that Employment Start Date \u2265 (Application Date \u2212 2 years).\n9d. Validate that Employment Start Date\u2019s year equals (YYYY\u22121).\n9e. If any condition in 9b\u20139d fails, Terminate process with skipping instructions as no further set is defined.\n9f. If conditions pass, check:\na. Tax Form 1040 exists for year (YYYY\u22121).\nb. Tax Form 1120 exists for year (YYYY\u22121).\nc. Check if either Tax Form 1125E OR Tax Form 1120SCHG exists for year (YYYY\u22121).\n9g. If all conditions in 9f are met, Terminate process; else,\n\"Stop the process and return discrepancy message.\"\nDiscrepancy Message:\n\"Borrower's personal Tax Returns (1040s) and/or Business Tax Returns (1120) are missing for the most recent year. As the business started less than 2 years ago as reflected on Form 1003.\"",
                        "discrepancy_messages": ""
                    }
                ]
            }
        ]
    }
]
